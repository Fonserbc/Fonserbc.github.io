/* Goo Engine passpack 0.11.3
 * Copyright 2014 Goo Technologies AB
 */
(function(window){function f(){
define("goo/passpack/ShaderLibExtra",["goo/renderer/MeshData","goo/renderer/Shader","goo/renderer/shaders/ShaderFragment","goo/renderer/shaders/ShaderBuilder","goo/renderer/Util","goo/renderer/shaders/ShaderLib","goo/entities/World"],function(e,t,n,r,i,s,o){function u(){}return u.billboard={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewProjectionMatrix:t.VIEW_PROJECTION_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,viewMatrix:t.VIEW_MATRIX,worldMatrix:t.WORLD_MATRIX,diffuseMap:t.DIFFUSE_MAP},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","varying vec2 texCoord0;","void main(void) {","texCoord0 = vertexUV0;","gl_Position = viewProjectionMatrix * worldMatrix * vec4(0.0, 0.0, 0.0, 1.0) + projectionMatrix * vec4(vertexPosition.x, vertexPosition.y, 0.0, 0.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","varying vec2 texCoord0;","void main(void)","{","gl_FragColor = texture2D(diffuseMap, texCoord0);","}"].join("\n")},u.showDepth={attributes:{vertexPosition:e.POSITION},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,near:t.NEAR_PLANE,far:t.FAR_PLANE},vshader:["attribute vec3 vertexPosition;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","void main(void) {","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform float near;","uniform float far;","void main(void)","{","float depth = gl_FragCoord.z / gl_FragCoord.w;","float d = 1.0 - smoothstep( near, far, depth );","gl_FragColor = vec4(d);","}"].join("\n")},u.bokehShader={attributes:{position:e.POSITION,uv:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tColor:t.DIFFUSE_MAP,tDepth:t.DEPTH_MAP,focus:1,aspect:1,aperture:.025,maxblur:1},vshader:["attribute vec3 position;","attribute vec2 uv;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","	vUv = uv;","	gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( position, 1.0 );","}"].join("\n"),fshader:["varying vec2 vUv;","uniform sampler2D tColor;","uniform sampler2D tDepth;","uniform float maxblur;","uniform float aperture;","uniform float focus;","uniform float aspect;","void main() {","vec2 aspectcorrect = vec2( 1.0, aspect );","vec4 depth1 = texture2D( tDepth, vUv );","float factor = depth1.x - focus;","vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );","vec2 dofblur9 = dofblur * 0.9;","vec2 dofblur7 = dofblur * 0.7;","vec2 dofblur4 = dofblur * 0.4;","vec4 col = vec4( 0.0 );","col += texture2D( tColor, vUv.xy );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );","gl_FragColor = col / 41.0;","gl_FragColor.a = 1.0;","}"].join("\n")},u.sepia={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,amount:1},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform float amount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 color = texture2D(tDiffuse, vUv );","vec3 c = color.rgb;","color.r = dot(c, vec3(1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount));","color.g = dot(c, vec3(0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount));","color.b = dot(c, vec3(0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount));","gl_FragColor = vec4(min(vec3(1.0), color.rgb), color.a);","}"].join("\n")},u.dotscreen={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,tSize:[256,256],center:[.5,.5],angle:1.57,scale:1},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","float s = sin( angle ), c = cos( angle );","vec2 tex = vUv * tSize - center;","vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","return ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","vec4 color = texture2D( tDiffuse, vUv );","float average = ( color.r + color.g + color.b ) / 3.0;","gl_FragColor = vec4( color.rgb * vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")},u.vignette={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,offset:1,darkness:1.5},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform float offset;","uniform float darkness;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );","gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );","}"].join("\n")},u.film={attributes:s.copy.attributes,uniforms:{tDiffuse:t.DIFFUSE_MAP,time:function(){return o.time},nIntensity:.5,sIntensity:.5,sCount:1024,grayscale:0,$link:s.copy.uniforms},vshader:s.copy.vshader,fshader:["uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 texCoord0;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, texCoord0 );","float x = texCoord0.x * texCoord0.y * time * 1000.0;","x = mod( x, 13.0 ) * mod( x, 123.0 );","float dx = mod( x, 0.01 );","vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );","vec2 sc = vec2( sin( texCoord0.y * sCount ), cos( texCoord0.y * sCount ) );","cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","cResult = cTextureScreen.rgb + nIntensity * ( cResult - cTextureScreen.rgb );","if( grayscale ) {","	cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","}","gl_FragColor = vec4( cResult, cTextureScreen.a );","}"].join("\n")},u.noise={attributes:s.copy.attributes,uniforms:{tDiffuse:t.DIFFUSE_MAP,time:function(){return o.time},nIntensity:.5,grayscale:0,$link:s.copy.uniforms},vshader:s.copy.vshader,fshader:["uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform sampler2D tDiffuse;","varying vec2 texCoord0;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, texCoord0);","float x = texCoord0.x * texCoord0.y * time * 1000.0;","vec3 cResult;","if ( !grayscale ) {","float y = fract(sin(dot(vec2(mod( x + 20.0, 87.0 ), mod( x + 150.0, 23.0 )), vec2(12.9898,78.233))) * 43758.5453);","float z = fract(sin(dot(vec2(mod( x + 30.0, 19.0 ), mod( x + 200.0, 103.0 )), vec2(12.9898,78.233))) * 43758.5453);","x = fract(sin(dot(vec2(mod( x, 13.0 ), mod( x + 50.0, 123.0 )), vec2(12.9898,78.233))) * 43758.5453);","cResult = vec3(x, y, z);","} else {","x = fract(sin(dot(vec2(mod( x, 13.0 ), mod( x + 50.0, 123.0 )), vec2(12.9898,78.233))) * 43758.5453);","cResult = vec3(x);","}","gl_FragColor = vec4( mix(cTextureScreen.rgb, cResult, nIntensity), cTextureScreen.a );","}"].join("\n")},u.bleachbypass={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,opacity:1},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 base = texture2D( tDiffuse, vUv );","vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );","float lum = dot( lumCoeff, base.rgb );","vec3 blend = vec3( lum );","float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );","vec3 result1 = 2.0 * base.rgb * blend;","vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );","vec3 newColor = mix( result1, result2, L );","float A2 = opacity * base.a;","vec3 mixRGB = A2 * newColor.rgb;","mixRGB += ( ( 1.0 - A2 ) * base.rgb );","gl_FragColor = vec4( mixRGB, base.a );","}"].join("\n")},u.horizontalTiltShift={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,h:1/128,r:.5},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform float h;","uniform float r;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","float hh = h * abs( r - vUv.y );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x,            vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")},u.colorify={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,color:[1,1,1],amount:1},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform vec3 color;","uniform float amount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( gl_FragColor.rgb, luma );","gl_FragColor.rgb = mix(gl_FragColor.rgb, v * color, amount);","}"].join("\n")},u.hatch={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,width:0,spread:10,replace:!0},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform float width;","uniform float spread;","uniform bool replace;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","float lum = length(gl_FragColor.rgb);","vec3 mult = vec3(1.0, 1.0, 1.0);","float halfSpread = (spread*0.5);","if (lum < 1.00) {","float diff = abs(mod(gl_FragCoord.x + gl_FragCoord.y, spread) - halfSpread);","if (diff <= width) {","mult *= vec3(1.0 - (width - diff) / width);","}","}","if (lum < 0.75) {","float diff = abs(mod(gl_FragCoord.x - gl_FragCoord.y, spread) - halfSpread);","if (diff <= width) {","mult *= vec3(1.0 - (width - diff) / width);","}","}","if (lum < 0.50) {","float diff = abs(mod(gl_FragCoord.x + halfSpread + gl_FragCoord.y, spread) - halfSpread);","if (diff <= width) {","mult *= vec3(1.0 - (width - diff) / width);","}","}","if (lum < 0.25) {","float diff = abs(mod(gl_FragCoord.x + halfSpread - gl_FragCoord.y, spread) - halfSpread);","if (diff <= width) {","mult *= vec3(1.0 - (width - diff) / width);","}","}","if (replace) {","gl_FragColor.rgb = mult;","} else {","gl_FragColor.rgb *= mult;","}","}"].join("\n")},u.ssao={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,tDepth:t.DEPTH_MAP,size:[512,512],cameraNear:t.MAIN_NEAR_PLANE,cameraFar:t.MAIN_FAR_PLANE,fogNear:t.MAIN_NEAR_PLANE,fogFar:t.MAIN_FAR_PLANE,fogEnabled:0,onlyAO:0,aoClamp:.3,lumInfluence:0},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform float cameraNear;","uniform float cameraFar;","uniform float fogNear;","uniform float fogFar;","uniform bool fogEnabled;","uniform bool onlyAO;","uniform vec2 size;","uniform float aoClamp;","uniform float lumInfluence;","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","varying vec2 vUv;","#define DL 2.399963229728653","#define EULER 2.718281828459045","float width = size.x;","float height = size.y;","float cameraFarPlusNear = cameraFar + cameraNear;","float cameraFarMinusNear = cameraFar - cameraNear;","float cameraCoef = 2.0 * cameraNear;","const int samples = 16;","const float radius = 2.0;","const bool useNoise = false;","const float noiseAmount = 0.0003;","const float diffArea = 0.4;","const float gDisplace = 0.4;","const vec3 onlyAOColor = vec3( 1.0, 1.0, 1.0 );","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","vec2 rand( const vec2 coord ) {","vec2 noise;","if ( useNoise ) {","float nx = dot ( coord, vec2( 12.9898, 78.233 ) );","float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );","noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );","} else {","float ff = fract( 1.0 - coord.s * ( width / 2.0 ) );","float gg = fract( coord.t * ( height / 2.0 ) );","noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;","}","return ( noise * 2.0  - 1.0 ) * noiseAmount;","}","float doFog() {","float zdepth = unpackDepth( texture2D( tDepth, vUv ) );","float depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );","return smoothstep( fogNear, fogFar, depth );","}","float readDepth( const in vec2 coord ) {","return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );","}","float compareDepths( const in float depth1, const in float depth2, inout int far ) {","float garea = 2.0;","float diff = ( depth1 - depth2 ) * 100.0;","if ( diff < gDisplace ) {","garea = diffArea;","} else {","far = 1;","}","float dd = diff - gDisplace;","float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );","return gauss;","}","float calcAO( float depth, float dw, float dh ) {","float dd = radius - depth * radius;","vec2 vv = vec2( dw, dh );","vec2 coord1 = vUv + dd * vv;","vec2 coord2 = vUv - dd * vv;","float temp1 = 0.0;","float temp2 = 0.0;","int far = 0;","temp1 = compareDepths( depth, readDepth( coord1 ), far );","if ( far > 0 ) {","temp2 = compareDepths( readDepth( coord2 ), depth, far );","temp1 += ( 1.0 - temp1 ) * temp2;","}","return temp1;","}","void main() {","vec2 noise = rand( vUv );","float depth = readDepth( vUv );","float tt = clamp( depth, aoClamp, 1.0 );","float w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );","float h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );","float pw;","float ph;","float ao;","float dz = 1.0 / float( samples );","float z = 1.0 - dz / 2.0;","float l = 0.0;","for ( int i = 0; i <= samples; i ++ ) {","float r = sqrt( 1.0 - z );","pw = cos( l ) * r;","ph = sin( l ) * r;","ao += calcAO( depth, pw * w, ph * h );","z = z - dz;","l = l + DL;","}","ao /= float( samples );","ao = 1.0 - ao;","if ( fogEnabled ) {","ao = mix( ao, 1.0, doFog() );","}","vec3 color = texture2D( tDiffuse, vUv ).rgb;","vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );","float lum = dot( color.rgb, lumcoeff );","vec3 luminance = vec3( lum );","vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","if ( onlyAO ) {","final = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","}","gl_FragColor = vec4( final, 1.0 );","}"].join("\n")},u.skinning={defines:{JOINT_COUNT:56,WEIGHTS:4},attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0,vertexWeights:e.WEIGHTS,vertexJointIDs:e.JOINTIDS},uniforms:{viewProjectionMatrix:t.VIEW_PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,diffuseMap:t.DIFFUSE_MAP,jointPalette:function(e){var t=e.meshData,n=t.currentPose;if(n){var r=n._matrixPalette,i=t.paletteMap.length*16,s=t.store;s||(s=new Float32Array(i),t.store=s);var o;for(var u=0;u<t.paletteMap.length;u++){o=r[t.paletteMap[u]];for(var a=0;a<4;a++)for(var f=0;f<4;f++)s[u*16+a*4+f]=o.data[f*4+a]}return s}}},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","attribute vec4 vertexWeights;","attribute vec4 vertexJointIDs;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","uniform mat4 jointPalette[JOINT_COUNT];","varying vec2 texCoord0;","void main(void) {","mat4 mat = mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);","mat += jointPalette[int(vertexJointIDs.x)] * vertexWeights.x;","mat += jointPalette[int(vertexJointIDs.y)] * vertexWeights.y;","mat += jointPalette[int(vertexJointIDs.z)] * vertexWeights.z;","mat += jointPalette[int(vertexJointIDs.w)] * vertexWeights.w;","texCoord0 = vertexUV0;","gl_Position = viewProjectionMatrix * worldMatrix * mat * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","varying vec2 texCoord0;","void main(void)","{","gl_FragColor = texture2D(diffuseMap, texCoord0);","}"].join("\n")},u.rgbshift={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,amount:.005,angle:0},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform float amount;","uniform float angle;","varying vec2 vUv;","void main() {","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, vUv + offset);","vec4 cga = texture2D(tDiffuse, vUv);","vec4 cb = texture2D(tDiffuse, vUv - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","}"].join("\n")},u.brightnesscontrast={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,brightness:0,contrast:0,saturation:0},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform float brightness;","uniform float contrast;","uniform float saturation;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","gl_FragColor.rgb += brightness;","if (contrast > 0.0) {","gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;","} else {","gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;","}","vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), gl_FragColor.rgb));","gl_FragColor.rgb = mix(gl_FragColor.rgb, gray, -saturation);","}"].join("\n")},u.hsb={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,hue:0,saturation:0,brightness:0},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform float hue;","uniform float saturation;","uniform float brightness;","varying vec2 vUv;",n.methods.hsv,"void main() {","gl_FragColor = texture2D(tDiffuse, vUv);","vec3 fragHSV = rgb2hsv(gl_FragColor.rgb).xyz;","fragHSV.x += hue * 0.5;","fragHSV.y *= saturation + 1.0 - max(brightness, 0.0) * 2.0;","fragHSV.z *= min(brightness + 1.0, 1.0);","fragHSV.z += max(brightness, 0.0);","fragHSV.xyz = clamp(fragHSV.xyz, vec3(-10.0, 0.0, 0.0), vec3(10.0, 1.0, 1.0));","gl_FragColor.rgb = hsv2rgb(fragHSV);","}"].join("\n")},u.luminosity={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","gl_FragColor = vec4( v, v, v, texel.w );","}"].join("\n")},u.toon={attributes:{vertexPosition:e.POSITION,vertexNormal:e.NORMAL},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,cameraPosition:t.CAMERA,lightPosition:t.LIGHT0,HighlightColor:[.9,.8,.7,1],MidColor:[.65,.55,.45,1],ShadowColor:[.4,.3,.2,1],HighlightSize:.2,ShadowSize:.01,OutlineWidth:.15},vshader:["attribute vec3 vertexPosition;","attribute vec3 vertexNormal;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","uniform vec3 cameraPosition;","uniform vec3 lightPosition;","varying vec3 N;","varying vec3 V;","varying vec3 L;","void main() {","vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","N = (worldMatrix * vec4(vertexNormal, 0.0)).xyz;","L = lightPosition - worldPos.xyz;","V = cameraPosition - worldPos.xyz;","gl_Position = projectionMatrix * viewMatrix * worldPos;","}"].join("\n"),fshader:["uniform vec4 HighlightColor;","uniform vec4 MidColor;","uniform vec4 ShadowColor;","uniform float HighlightSize;","uniform float ShadowSize;","uniform float OutlineWidth;","varying vec3 N;","varying vec3 L;","varying vec3 V;","void main() {","vec3 n = normalize(N);","vec3 l = normalize(L);","vec3 v = normalize(V);","float lambert = dot(l,n);","vec4 color = MidColor;","if (lambert > 1.0 - HighlightSize) color = HighlightColor;","if (lambert < ShadowSize) color = ShadowColor;","if (dot(n,v) < OutlineWidth) color = vec4(0.0,0.0,0.0,1.0);","gl_FragColor = color;","}"].join("\n")},u.differenceOfGaussians={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,gaussBlurredImage1:"BLUR1",gaussBlurredImage2:"BLUR2",originalImage:"ORIGINAL",threshold:.01,edgeColor:[1,0,1,1],backgroundColor:[0,0,0,1],backgroundMix:1},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","texCoord0 = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D gaussBlurredImage1;","uniform sampler2D gaussBlurredImage2;","uniform sampler2D originalImage;","uniform float threshold;","uniform float backgroundMix;","uniform vec4 edgeColor;","uniform vec4 backgroundColor;","varying vec2 texCoord0;","void main(void)","{","vec4 blur1 = texture2D(gaussBlurredImage1, texCoord0);","vec4 blur2 = texture2D(gaussBlurredImage2, texCoord0);","vec4 originalColor = texture2D(originalImage, texCoord0);","vec3 nonEdgeColor = mix(originalColor.rgb, backgroundColor.rgb, backgroundMix);","vec3 diffColor = abs(blur1.rgb - blur2.rgb);","float edgeValue = (diffColor.r + diffColor.g + diffColor.b) / 3.0;","edgeValue = smoothstep(0.0, threshold, edgeValue);","vec3 outputColor = mix(nonEdgeColor, edgeColor.rgb, edgeValue);","gl_FragColor = vec4(outputColor, 1.0);","}"].join("\n")},u.overlay={defines:{OVERLAY_TYPE:0},processors:[function(e,t){var n=t.material._textureMaps.OVERLAY_MAP;if(n){e.defines.OVERLAY_MAP=!0;var r=e.uniforms.offsetRepeat;r[0]=n.offset.data[0],r[1]=n.offset.data[1],r[2]=n.repeat.data[0],r[3]=n.repeat.data[1]}else delete e.defines.OVERLAY_MAP}],attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,tDiffuse2:"OVERLAY_MAP",offsetRepeat:[0,0,1,1],amount:1},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:[n.blendmodes,"#define Mixin(base, blend, type, a)	mix(base, type(base, blend), a);","uniform sampler2D tDiffuse;","uniform sampler2D tDiffuse2;","uniform float amount;","#ifdef OVERLAY_MAP","uniform vec4 offsetRepeat;","#endif","varying vec2 vUv;","void main() {","gl_FragColor = texture2D(tDiffuse, vUv);","#ifdef OVERLAY_MAP","vec2 oUv = vUv * offsetRepeat.zw + offsetRepeat.xy;","vec4 blendTexture = texture2D(tDiffuse2, oUv);","float a = amount * blendTexture.a;","#endif","#if !defined(OVERLAY_MAP)","#elif OVERLAY_TYPE == 0","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendNormal, a);","#elif OVERLAY_TYPE == 1","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendLighten, a);","#elif OVERLAY_TYPE == 2","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendDarken, a);","#elif OVERLAY_TYPE == 3","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendMultiply, a);","#elif OVERLAY_TYPE == 4","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendAverage, a);","#elif OVERLAY_TYPE == 5","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendAdd, a);","#elif OVERLAY_TYPE == 6","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendSubstract, a);","#elif OVERLAY_TYPE == 7","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendDifference, a);","#elif OVERLAY_TYPE == 8","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendNegation, a);","#elif OVERLAY_TYPE == 9","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendExclusion, a);","#elif OVERLAY_TYPE == 10","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendScreen, a);","#elif OVERLAY_TYPE == 11","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendOverlay, a);","#elif OVERLAY_TYPE == 12","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendSoftLight, a);","#elif OVERLAY_TYPE == 13","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendHardLight, a);","#elif OVERLAY_TYPE == 14","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendColorDodge, a);","#elif OVERLAY_TYPE == 15","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendColorBurn, a);","#elif OVERLAY_TYPE == 16","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendLinearLight, a);","#elif OVERLAY_TYPE == 17","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendVividLight, a);","#elif OVERLAY_TYPE == 18","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendPinLight, a);","#elif OVERLAY_TYPE == 19","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendHardMix, a);","#elif OVERLAY_TYPE == 20","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendReflect, a);","#elif OVERLAY_TYPE == 21","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendGlow, a);","#elif OVERLAY_TYPE == 22","gl_FragColor.rgb = Mixin(gl_FragColor.rgb, blendTexture.rgb, BlendPhoenix, a);","#endif","}"].join("\n")},u.levels={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,gamma:1,minInput:0,maxInput:1,minOutput:0,maxOutput:1},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:[n.blendmodes,"uniform sampler2D tDiffuse;","uniform float gamma;","uniform float minInput;","uniform float maxInput;","uniform float minOutput;","uniform float maxOutput;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","gl_FragColor.rgb = LevelsControl(gl_FragColor.rgb, minInput, gamma, maxInput, minOutput, maxOutput);","}"].join("\n")},u.boxfilter={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,viewport:[128,128]},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform vec2 viewport;","varying vec2 vUv;","void main() {","vec3 result = vec3(0.0);","for(int x=-1; x<=1; x++) {","for(int y=-1; y<=1; y++) {","result += texture2D(tDiffuse, vUv + vec2(x, y) / viewport).rgb;","}","}","gl_FragColor = vec4(result / vec3(9.0), 1.0);","}"].join("\n")},u.radial={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,frameBufSize:t.RESOLUTION,offset:.5,multiplier:-0.75},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoords;","void main() {","texCoords = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform vec2 frameBufSize;","uniform float offset;","uniform float multiplier;","varying vec2 texCoords;","void main() {","vec2 uv = texCoords - 0.5;","vec3 o = texture2D(tDiffuse, 0.5 + (uv.xy *= 0.992)).rgb;","float z = 0.0;","for (float i = 0.0; i < 50.0; i++) {","vec3 T = texture2D(tDiffuse, 0.5 + (uv.xy *= 0.992)).rgb;","z += pow(max(0.0, offset + length(T) * multiplier), 2.0) * exp(-i * 0.08);","}","gl_FragColor = vec4(o*o + z, 1.0);","}"].join("\n")},u.packDepth={attributes:{vertexPosition:e.POSITION},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,farPlane:t.FAR_PLANE},vshader:["attribute vec3 vertexPosition;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec4 vPosition;","void main(void) {","vPosition = viewMatrix * worldMatrix * vec4(vertexPosition, 1.0);","gl_Position = projectionMatrix * vPosition;","}"].join("\n"),fshader:["uniform float farPlane;",n.methods.packDepth,"varying vec4 vPosition;","void main(void)","{","float linearDepth = min(length(vPosition), farPlane) / farPlane;","gl_FragColor = packDepth(linearDepth);","}"].join("\n")},u.antialias={attributes:{vertexPosition:e.POSITION,vertexUV0:e.TEXCOORD0},uniforms:{viewMatrix:t.VIEW_MATRIX,projectionMatrix:t.PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,tDiffuse:t.DIFFUSE_MAP,frameBufSize:t.RESOLUTION,FXAA_SPAN_MAX:8,FXAA_REDUCE_MUL:1/8},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoords;","void main() {","texCoords = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform sampler2D tDiffuse;","uniform vec2 frameBufSize;","uniform float FXAA_SPAN_MAX;","uniform float FXAA_REDUCE_MUL;","varying vec2 texCoords;","void main() {","float FXAA_REDUCE_MIN = 1.0/128.0;","vec3 rgbNW = texture2D(tDiffuse, texCoords + (vec2(-1.0, -1.0) / frameBufSize)).xyz;","vec3 rgbNE = texture2D(tDiffuse, texCoords + (vec2(1.0, -1.0) / frameBufSize)).xyz;","vec3 rgbSW = texture2D(tDiffuse, texCoords + (vec2(-1.0, 1.0) / frameBufSize)).xyz;","vec3 rgbSE = texture2D(tDiffuse, texCoords + (vec2(1.0, 1.0) / frameBufSize)).xyz;","vec3 rgbM = texture2D(tDiffuse, texCoords).xyz;","vec3 luma=vec3(0.299, 0.587, 0.114);","float lumaNW = dot(rgbNW, luma);","float lumaNE = dot(rgbNE, luma);","float lumaSW = dot(rgbSW, luma);","float lumaSE = dot(rgbSE, luma);","float lumaM  = dot(rgbM,  luma);","float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));","float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));","vec2 dir;","dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","float dirReduce = max(","		(lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL),","		FXAA_REDUCE_MIN);","float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);","dir = min(vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),","		  max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),","		  dir * rcpDirMin)) / frameBufSize;","vec3 rgbA = (1.0/2.0) * (","		texture2D(tDiffuse, texCoords.xy + dir * (1.0/3.0 - 0.5)).xyz +","		texture2D(tDiffuse, texCoords.xy + dir * (2.0/3.0 - 0.5)).xyz);","vec3 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * (","		texture2D(tDiffuse, texCoords.xy + dir * (0.0/3.0 - 0.5)).xyz +","		texture2D(tDiffuse, texCoords.xy + dir * (3.0/3.0 - 0.5)).xyz);","float lumaB = dot(rgbB, luma);","if ((lumaB < lumaMin) || (lumaB > lumaMax)) {","		gl_FragColor.xyz=rgbA;","} else{","		gl_FragColor.xyz=rgbB;","}","}"].join("\n")},u}),define("goo/passpack/BloomPass",["goo/renderer/Material","goo/renderer/pass/FullscreenUtil","goo/renderer/pass/RenderTarget","goo/renderer/Util","goo/renderer/shaders/ShaderLib","goo/passpack/ShaderLibExtra","goo/renderer/pass/Pass"],function(e,t,n,r,i,s,o){function u(n){n=n||{},this.target=n.target!==undefined?n.target:null;var o=n.strength!==undefined?n.strength:0,a=n.sigma!==undefined?n.sigma:4,f=2*Math.ceil(a*3)+1;this.downsampleAmount=n.downsampleAmount!==undefined?Math.max(n.downsampleAmount,1):4;var l=window.innerWidth||1024,c=window.innerHeight||1024;this.updateSize({x:0,y:0,width:l,height:c}),this.renderable={meshData:t.quad,materials:[]},this.copyMaterial=new e(i.copyPure),this.copyMaterial.uniforms.opacity=o,this.copyMaterial.blendState.blending="AdditiveBlending",this.convolutionShader=r.clone(i.convolution),this.convolutionShader.defines={KERNEL_SIZE_FLOAT:f.toFixed(1),KERNEL_SIZE_INT:f.toFixed(0)},this.convolutionMaterial=new e(this.convolutionShader),this.convolutionMaterial.uniforms.uImageIncrement=u.blurX,this.convolutionMaterial.uniforms.cKernel=this.convolutionShader.buildKernel(a),this.bcMaterial=new e(s.brightnesscontrast),this.bcMaterial.uniforms.brightness=0,this.bcMaterial.uniforms.contrast=0,this.enabled=!0,this.clear=!1,this.needsSwap=!1}return u.prototype=Object.create(o.prototype),u.prototype.constructor=u,u.prototype.destroy=function(e){this.renderTargetX&&this.renderTargetX.destroy(e.context),this.renderTargetY&&this.renderTargetY.destroy(e.context),this.convolutionMaterial.shader.destroy(),this.copyMaterial.shader.destroy(),this.bcMaterial.shader.destroy()},u.prototype.updateSize=function(e,t){var r=e.width/this.downsampleAmount,i=e.height/this.downsampleAmount;this.renderTargetX&&this.renderTargetX.destroy(t.context),this.renderTargetY&&this.renderTargetY.destroy(t.context),this.renderTargetX=new n(r,i),this.renderTargetY=new n(r,i)},u.prototype.render=function(e,n,r){this.renderable.materials[0]=this.bcMaterial,this.bcMaterial.setTexture("DIFFUSE_MAP",r),e.render(this.renderable,t.camera,[],this.renderTargetY,!0),this.renderable.materials[0]=this.convolutionMaterial,this.convolutionMaterial.setTexture("DIFFUSE_MAP",this.renderTargetY),this.convolutionMaterial.uniforms.uImageIncrement=u.blurY,e.render(this.renderable,t.camera,[],this.renderTargetX,!0),this.convolutionMaterial.setTexture("DIFFUSE_MAP",this.renderTargetX),this.convolutionMaterial.uniforms.uImageIncrement=u.blurX,e.render(this.renderable,t.camera,[],this.renderTargetY,!0),this.renderable.materials[0]=this.copyMaterial,this.copyMaterial.setTexture("DIFFUSE_MAP",this.renderTargetY),this.target!==null?e.render(this.renderable,t.camera,[],this.target,this.clear):e.render(this.renderable,t.camera,[],r,this.clear)},u.blurX=[.001953125,0],u.blurY=[0,.001953125],u}),define("goo/passpack/BlurPass",["goo/renderer/Material","goo/renderer/pass/FullscreenUtil","goo/renderer/pass/RenderTarget","goo/renderer/Util","goo/renderer/shaders/ShaderLib","goo/renderer/pass/Pass"],function(e,t,n,r,i,s){function o(n){n=n||{},this.target=n.target!==undefined?n.target:null;var s=n.strength!==undefined?n.strength:1,o=n.sigma!==undefined?n.sigma:4,u=2*Math.ceil(o*3)+1;this.downsampleAmount=n.downsampleAmount!==undefined?Math.max(n.downsampleAmount,1):4,this.blurX=[.001953125,0],this.blurY=[0,.001953125];var a=window.innerWidth||1024,f=window.innerHeight||1024;this.updateSize({x:0,y:0,width:a,height:f}),this.renderable={meshData:t.quad,materials:[]},this.copyMaterial=new e(i.copyPure),this.copyMaterial.uniforms.opacity=s,this.copyMaterial.blendState.blending="CustomBlending",this.convolutionShader=r.clone(i.convolution),this.convolutionShader.defines={KERNEL_SIZE_FLOAT:u.toFixed(1),KERNEL_SIZE_INT:u.toFixed(0)},this.convolutionShader.uniforms.uImageIncrement=this.blurX,this.convolutionShader.uniforms.cKernel=this.convolutionShader.buildKernel(o),this.convolutionMaterial=new e(this.convolutionShader),this.enabled=!0,this.clear=!1,this.needsSwap=!1}return o.prototype=Object.create(s.prototype),o.prototype.constructor=o,o.prototype.destroy=function(e){this.renderTargetX&&this.renderTargetX.destroy(e.context),this.renderTargetY&&this.renderTargetY.destroy(e.context),this.convolutionMaterial.shader.destroy(),this.copyMaterial.shader.destroy()},o.prototype.updateSize=function(e,t){var r=e.width/this.downsampleAmount,i=e.height/this.downsampleAmount;this.renderTargetX&&t._deallocateRenderTarget(this.renderTargetX),this.renderTargetY&&t._deallocateRenderTarget(this.renderTargetY),this.renderTargetX=new n(r,i),this.renderTargetY=new n(r,i)},o.prototype.render=function(e,n,r){this.renderable.materials[0]=this.convolutionMaterial,this.convolutionMaterial.setTexture("DIFFUSE_MAP",r),this.convolutionMaterial.uniforms.uImageIncrement=this.blurY,e.render(this.renderable,t.camera,[],this.renderTargetX,!0),this.convolutionMaterial.setTexture("DIFFUSE_MAP",this.renderTargetX),this.convolutionMaterial.uniforms.uImageIncrement=this.blurX,e.render(this.renderable,t.camera,[],this.renderTargetY,!0),this.renderable.materials[0]=this.copyMaterial,this.copyMaterial.setTexture("DIFFUSE_MAP",this.renderTargetY),this.target!==null?e.render(this.renderable,t.camera,[],this.target,this.clear):e.render(this.renderable,t.camera,[],r,this.clear)},o}),define("goo/passpack/DOFPass",["goo/renderer/Material","goo/renderer/pass/RenderTarget","goo/renderer/MeshData","goo/renderer/Shader","goo/renderer/shaders/ShaderFragment","goo/renderer/pass/RenderPass","goo/renderer/pass/FullscreenPass","goo/passpack/BlurPass","goo/renderer/Util","goo/util/Skybox","goo/renderer/pass/Pass"],function(e,t,n,r,i,s,o,u,a,f,l){function c(n,r){this.depthPass=new s(n,function(e){return!(e instanceof f)}),this.regularPass=new s(n);var i=new e(h);this.depthPass.overrideMaterial=i;var u=r||p;this.outPass=new o(u),this.outPass.useReadBuffer=!1,this.outPass.renderToScreen=!0;var l=window.innerWidth||1,c=window.innerHeight||1,d=a.nearestPowerOfTwo(Math.max(l,c));this.depthTarget=new t(l,c),this.regularTarget=new t(d/2,d/2),this.regularTarget2=new t(l,c),this.regularTarget.generateMipmaps=!0,this.regularTarget.minFilter="Trilinear",this.enabled=!0,this.clear=!1,this.needsSwap=!0}c.prototype=Object.create(l.prototype),c.prototype.constructor=c,c.prototype.render=function(e,t,n,i){this.depthPass.render(e,null,this.depthTarget,i),this.regularPass.render(e,null,this.regularTarget,i),this.regularPass.render(e,null,this.regularTarget2,i),this.outPass.material.setTexture(r.DEPTH_MAP,this.depthTarget),this.outPass.material.setTexture(r.DIFFUSE_MAP,this.regularTarget),this.outPass.material.setTexture("DIFFUSE_MIP",this.regularTarget2),this.outPass.render(e,t,n,i)};var h={attributes:{vertexPosition:n.POSITION},uniforms:{viewMatrix:r.VIEW_MATRIX,projectionMatrix:r.PROJECTION_MATRIX,worldMatrix:r.WORLD_MATRIX,farPlane:r.FAR_PLANE},vshader:["attribute vec3 vertexPosition;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec4 vPosition;","void main(void) {","	vPosition = viewMatrix * worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = projectionMatrix * vPosition;","}"].join("\n"),fshader:["precision mediump float;","uniform float farPlane;",i.methods.packDepth,"varying vec4 vPosition;","void main(void)","{","	float linearDepth = min(-vPosition.z, farPlane) / farPlane;","	gl_FragColor = packDepth(linearDepth);","}"].join("\n")},p={attributes:{vertexPosition:n.POSITION,vertexUV0:n.TEXCOORD0},uniforms:{worldMatrix:r.WORLD_MATRIX,viewProjectionMatrix:r.VIEW_PROJECTION_MATRIX,depthMap:r.DEPTH_MAP,diffuseMap:r.DIFFUSE_MAP,diffuseMip:"DIFFUSE_MIP",zfar:r.FAR_PLANE,focalDepth:100,fStop:2,CoC:.003,focalLength:75,maxBlur:16},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = viewProjectionMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:"uniform sampler2D diffuseMap;\nuniform sampler2D diffuseMip;\nuniform sampler2D depthMap;\nuniform float zfar; //camera clipping end\nuniform float focalDepth;\nuniform float focalLength;\nuniform float fStop;\nuniform float CoC;\nuniform float maxBlur;\nvarying vec2 texCoord0;\n"+i.methods.unpackDepth+"void main() \n"+"{\n"+"	float depth = unpackDepth(texture2D(depthMap,texCoord0)) * zfar;\n"+"	float f = focalLength; //focal length in mm\n"+"	float d = focalDepth*1000.0; //focal plane in mm\n"+"	float o = depth*1000.0; //depth in mm\n"+"	float a = (o*f)/(o-f); \n"+"	float b = (d*f)/(d-f); \n"+"	float c = (d-f)/(d*fStop*CoC); \n"+"	float blur = clamp(abs(a-b)*c, 0.0, maxBlur);\n"+" if (blur < 0.3) {\n"+"   gl_FragColor = texture2D(diffuseMip, texCoord0);\n"+" } else { \n"+"   gl_FragColor = texture2D(diffuseMap, texCoord0, log2(blur));\n"+" }\n"+" gl_FragColor.a = 1.0;"+"}"};return c}),define("goo/passpack/DepthPass",["goo/renderer/Material","goo/renderer/pass/RenderTarget","goo/renderer/MeshData","goo/renderer/Shader","goo/renderer/shaders/ShaderFragment","goo/renderer/pass/RenderPass","goo/renderer/pass/FullscreenPass","goo/renderer/pass/Pass","goo/passpack/BlurPass"],function(e,t,n,r,i,s,o,u,a){function f(n,r){this.depthPass=new s(n);var i=new e(l);this.depthPass.overrideMaterial=i,this.blurTarget=new t(256,256),this.blurPass=new a({target:this.blurTarget});var u=r||c;this.outPass=new o(u),this.outPass.useReadBuffer=!1;var f=window.innerWidth||1,h=window.innerHeight||1;this.depthTarget=new t(f,h),this.enabled=!0,this.clear=!1,this.needsSwap=!0}f.prototype=Object.create(u.prototype),f.prototype.constructor=f,f.prototype.render=function(e,t,n,i){this.depthPass.render(e,null,this.depthTarget,i),this.blurPass.render(e,t,n,i),this.outPass.material.setTexture(r.DEPTH_MAP,this.depthTarget),this.outPass.material.setTexture(r.DIFFUSE_MAP,n),this.outPass.material.setTexture("BLUR_MAP",this.blurTarget),this.outPass.render(e,t,n,i)};var l={attributes:{vertexPosition:n.POSITION},uniforms:{viewMatrix:r.VIEW_MATRIX,projectionMatrix:r.PROJECTION_MATRIX,worldMatrix:r.WORLD_MATRIX,farPlane:r.FAR_PLANE},vshader:["attribute vec3 vertexPosition;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec4 vPosition;","void main(void) {","	vPosition = viewMatrix * worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = projectionMatrix * vPosition;","}"].join("\n"),fshader:["precision mediump float;","uniform float farPlane;",i.methods.packDepth,"varying vec4 vPosition;","void main(void)","{","	float linearDepth = min(length(vPosition), farPlane) / farPlane;","	gl_FragColor = packDepth(linearDepth);","}"].join("\n")},c={attributes:{vertexPosition:n.POSITION,vertexUV0:n.TEXCOORD0},uniforms:{viewMatrix:r.VIEW_MATRIX,projectionMatrix:r.PROJECTION_MATRIX,worldMatrix:r.WORLD_MATRIX,depthMap:r.DEPTH_MAP,diffuseMap:r.DIFFUSE_MAP},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["precision mediump float;","uniform sampler2D depthMap;","uniform sampler2D diffuseMap;","varying vec2 texCoord0;",i.methods.unpackDepth,"void main(void)","{","	vec4 depthCol = texture2D(depthMap, texCoord0);","	vec4 diffuseCol = texture2D(diffuseMap, texCoord0);","	float depth = unpackDepth(depthCol);","	gl_FragColor = diffuseCol * vec4(depth);","}"].join("\n")};return f}),define("goo/passpack/DoGPass",["goo/renderer/Material","goo/renderer/pass/FullscreenUtil","goo/renderer/pass/RenderTarget","goo/renderer/Util","goo/renderer/shaders/ShaderLib","goo/passpack/ShaderLibExtra","goo/renderer/pass/Pass"],function(e,t,n,r,i,s,o){function u(n){n=n||{},this.target=n.target!==undefined?n.target:null;var o=n.width!==undefined?n.width:1024,u=n.height!==undefined?n.height:1024,a=n.sigma!==undefined?n.sigma:.6,f=n.threshold!==undefined?n.threshold:.005;this.downsampleAmount=n.downsampleAmount!==undefined?Math.max(n.downsampleAmount,1):2,a>2.5&&(a=2.5),this.updateSize({width:o,height:u}),this.renderable={meshData:t.quad,materials:[]},this.convolutionShader1=r.clone(i.convolution),this.convolutionShader2=r.clone(i.convolution),this.differenceShader=r.clone(s.differenceOfGaussians),this.differenceShader.uniforms.threshold=f,this.differenceMaterial=new e(this.differenceShader),this.updateSigma(a),this.enabled=!0,this.clear=!1,this.needsSwap=!0}return u.prototype=Object.create(o.prototype),u.prototype.constructor=u,u.prototype.destroy=function(e){var t=e.context;this.convolutionMaterial1&&this.convolutionMaterial1.shader.destroy(),this.convolutionMaterial2&&this.convolutionMaterial2.shader.destroy(),this.differenceMaterial.shader.destroy(),this.gaussian1&&this.gaussian1.destroy(t),this.gaussian2&&this.gaussian2.destroy(t),this.renderTargetX&&this.renderTargetX.destroy(t),this.target&&this.target.destroy(t)},u.prototype.updateThreshold=function(e){this.differenceMaterial.shader.uniforms.threshold=e},u.prototype.updateEdgeColor=function(e){this.differenceMaterial.shader.uniforms.edgeColor=[e[0],e[1],e[2],1]},u.prototype.updateBackgroundColor=function(e){this.differenceMaterial.shader.uniforms.backgroundColor=[e[0],e[1],e[2],1]},u.prototype.updateBackgroundMix=function(e){this.differenceMaterial.shader.uniforms.backgroundMix=e},u.prototype.updateSize=function(e){var t=e.width/this.downsampleAmount,r=e.height/this.downsampleAmount;this.renderTargetX=new n(t,r),this.gaussian1=new n(t,r),this.gaussian2=new n(t,r),this.blurX=[.5/t,0],this.blurY=[0,.5/r]},u.prototype.updateSigma=function(t){var n=this.convolutionShader1.buildKernel(t),r=this.convolutionShader2.buildKernel(1.6*t),i=n.length;this.convolutionShader1.defines={KERNEL_SIZE_FLOAT:i.toFixed(1),KERNEL_SIZE_INT:i.toFixed(0)},i=r.length,this.convolutionShader2.defines={KERNEL_SIZE_FLOAT:i.toFixed(1),KERNEL_SIZE_INT:i.toFixed(0)},this.convolutionShader1.uniforms.cKernel=n,this.convolutionShader2.uniforms.cKernel=r,this.convolutionMaterial1=new e(this.convolutionShader1),this.convolutionMaterial2=new e(this.convolutionShader2)},u.prototype.render=function(e,n,r){this.renderable.materials[0]=this.convolutionMaterial1,this.convolutionMaterial1.setTexture("DIFFUSE_MAP",r),this.convolutionShader1.uniforms.uImageIncrement=this.blurX,e.render(this.renderable,t.camera,[],this.renderTargetX,!0),this.convolutionMaterial1.setTexture("DIFFUSE_MAP",this.renderTargetX),this.convolutionShader1.uniforms.uImageIncrement=this.blurY,e.render(this.renderable,t.camera,[],this.gaussian1,!0),this.renderable.materials[0]=this.convolutionMaterial2,this.convolutionMaterial2.setTexture("DIFFUSE_MAP",r),this.convolutionShader2.uniforms.uImageIncrement=this.blurX,e.render(this.renderable,t.camera,[],this.renderTargetX,!0),this.convolutionMaterial2.setTexture("DIFFUSE_MAP",this.renderTargetX),this.convolutionShader2.uniforms.uImageIncrement=this.blurY,e.render(this.renderable,t.camera,[],this.gaussian2,!0),this.renderable.materials[0]=this.differenceMaterial,this.differenceMaterial.setTexture("BLUR1",this.gaussian1),this.differenceMaterial.setTexture("BLUR2",this.gaussian2),this.differenceMaterial.setTexture("ORIGINAL",r),this.target!==null?e.render(this.renderable,t.camera,[],this.target,this.clear):e.render(this.renderable,t.camera,[],n,this.clear)},u}),define("goo/passpack/MotionBlurPass",["goo/renderer/Material","goo/renderer/Shader","goo/renderer/shaders/ShaderLib","goo/renderer/pass/FullscreenUtil","goo/renderer/MeshData","goo/renderer/pass/RenderTarget","goo/renderer/pass/FullscreenPass","goo/renderer/pass/Pass"],function(e,t,n,r,i,s,o,u){function a(){this.inPass=new o(f),this.outPass=new o(n.copyPure);var e=window.innerWidth||1024,t=window.innerHeight||1024;this.updateSize({x:0,y:0,width:e,height:t}),this.enabled=!0,this.clear=!1,this.needsSwap=!0}a.prototype=Object.create(u.prototype),a.prototype.constructor=a,a.prototype.destroy=function(e){this.inPass.destroy(e),this.outPass.destroy(e),this.targetSwap&&(this.targetSwap[0].destroy(e.context),this.targetSwap[1].destroy(e.context),this.targetSwap=undefined)},a.prototype.updateSize=function(e,t){var n=e.width,r=e.height;if(this.targetSwap)for(var i=0;i<this.targetSwap.length;i++)t._deallocateRenderTarget(this.targetSwap[i]);this.targetSwap=[new s(n,r),new s(n,r)]},a.prototype.render=function(e,t,n){this.inPass.material.setTexture("MOTION_MAP",this.targetSwap[1]),this.inPass.render(e,this.targetSwap[0],n),this.outPass.render(e,t,this.targetSwap[0]),this.targetSwap.reverse()};var f={defines:{},processors:[function(e,t){t.material._textureMaps.MOTION_MAP.glTexture?e.defines.MOTION_MAP=!0:delete e.defines.MOTION_MAP}],attributes:{vertexPosition:i.POSITION,vertexUV0:i.TEXCOORD0},uniforms:{viewProjectionMatrix:t.VIEW_PROJECTION_MATRIX,worldMatrix:t.WORLD_MATRIX,blend:.9,scale:1,diffuseMap:t.DIFFUSE_MAP,motionMap:"MOTION_MAP"},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","texCoord0 = vertexUV0;","gl_Position = viewProjectionMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D motionMap;","uniform float blend;","uniform float scale;","varying vec2 texCoord0;","void main(void)","{","vec4 colA = texture2D(diffuseMap, texCoord0);","#ifdef MOTION_MAP","vec4 colB = texture2D(motionMap, (texCoord0 - 0.5) / scale + 0.5);","float wBlend = blend;// * length(colB) / sqrt(3.0);","gl_FragColor = mix(colA, colB, wBlend);","#else","gl_FragColor = colA;","#endif","}"].join("\n")};return a}),define("goo/passpack/NesPass",["goo/renderer/TextureCreator","goo/renderer/Material","goo/renderer/pass/FullscreenUtil","goo/renderer/shaders/ShaderLib","goo/renderer/pass/Pass"],function(e,t,n,r,i){function s(r){this.material=new t(o),this.renderToScreen=!1,this.renderable={meshData:n.quad,materials:[this.material]},this.mapping=(new e).loadTexture2D(r),this.mapping.minFilter="NearestNeighborNoMipMaps",this.mapping.magFilter="NearestNeighbor",this.mapping.generateMipmaps=!1,this.enabled=!0,this.clear=!1,this.needsSwap=!0}s.prototype=Object.create(i.prototype),s.prototype.constructor=s,s.prototype.render=function(e,t,r){this.material.setTexture("DIFFUSE_MAP",r),this.material.setTexture("COLOR_MAPPING",this.mapping),this.renderToScreen?e.render(this.renderable,n.camera,[],null,this.clear):e.render(this.renderable,n.camera,[],t,this.clear)};var o={attributes:r.copy.attributes,uniforms:{diffuse:"DIFFUSE_MAP",mapping:"COLOR_MAPPING",$link:r.copy.uniforms},vshader:r.copy.vshader,fshader:["precision mediump float;","uniform sampler2D diffuse;","uniform sampler2D mapping;","varying vec2 texCoord0;","void main() {","	vec4 texCol = texture2D( diffuse, texCoord0 );","	float r = floor(texCol.r * 31.0);","	float g = floor(texCol.g * 31.0);","	float b = floor(texCol.b * 31.0);","	vec4 texPalette = texture2D( mapping, vec2((r * 32.0 + g)/1024.0, b / 32.0) );","	gl_FragColor = vec4( texPalette.rgb, 1.0 );","}"].join("\n")};return s}),define("goo/passpack/PassLib",["goo/passpack/ShaderLibExtra","goo/renderer/pass/FullscreenPass","goo/passpack/BloomPass","goo/passpack/BlurPass","goo/passpack/DoGPass","goo/passpack/MotionBlurPass","goo/renderer/Util"],function(e,t,n,r,i,s,o){function u(e){n.call(this),this.id=e}function a(e){i.call(this,arguments),this.id=e}function f(e){r.call(this,arguments),this.id=e}function l(n){t.call(this,o.clone(e.vignette)),this.id=n}function c(n){t.call(this,o.clone(e.sepia)),this.id=n}function h(n){t.call(this,o.clone(e.film)),this.id=n}function p(n){t.call(this,o.clone(e.noise)),this.id=n}function d(n){t.call(this,o.clone(e.rgbshift)),this.id=n}function v(n){t.call(this,o.clone(e.bleachbypass)),this.id=n}function m(n){t.call(this,o.clone(e.hsb)),this.id=n}function g(n){t.call(this,o.clone(e.colorify)),this.id=n}function y(n){t.call(this,o.clone(e.hatch)),this.id=n}function b(n){t.call(this,o.clone(e.dotscreen)),this.id=n}function w(n){t.call(this,o.clone(e.brightnesscontrast)),this.id=n}function E(e){s.call(this),this.id=e}function S(n){t.call(this,o.clone(e.antialias)),this.id=n}function x(n){t.call(this,o.clone(e.radial)),this.id=n}function T(n){t.call(this,o.clone(e.overlay)),this.id=n}function N(n){t.call(this,o.clone(e.levels)),this.id=n}return u.prototype=Object.create(n.prototype),u.prototype.constructor=u,u.prototype.update=function(e){var t=e.options||{};t.opacity!==undefined&&(this.copyMaterial.uniforms.opacity=t.opacity/100),t.size!==undefined&&(this.convolutionMaterial.uniforms.size=t.size),t.brightness!==undefined&&(this.bcMaterial.uniforms.brightness=t.brightness/100),t.contrast!==undefined&&(this.bcMaterial.uniforms.contrast=t.contrast/100),e.enabled!==undefined&&(this.enabled=e.enabled)},u.label="Bloom",u.options=[{key:"opacity",name:"Opacity",type:"int",control:"slider",min:0,max:100,"default":100},{key:"size",name:"Size",type:"float",control:"slider",min:0,max:10,decimals:1,"default":2},{key:"brightness",name:"Gain",type:"int",control:"slider",min:-100,max:100,"default":0},{key:"contrast",name:"Intensity",type:"int",control:"slider",min:-100,max:100,"default":0}],a.prototype=Object.create(i.prototype),a.prototype.constructor=a,a.prototype.update=function(e){var t=e.options||{};e.enabled!==undefined&&(this.enabled=e.enabled),t.sigma!==undefined&&this.updateSigma(t.sigma),t.threshold!==undefined&&this.updateThreshold(t.threshold),t.edgeColor!==undefined&&this.updateEdgeColor(t.edgeColor),t.backgroundColor!==undefined&&this.updateBackgroundColor(t.backgroundColor),t.backgroundMix!==undefined&&this.updateBackgroundMix(t.backgroundMix)},a.label="Edge detect",a.options=[{key:"sigma",name:"Gauss Sigma",type:"float",control:"slider",min:.01,max:1.7,decimals:2,"default":.6},{key:"threshold",name:"Threshold",type:"float",control:"slider",min:1e-14,max:.11,decimals:20,"default":.005},{key:"backgroundMix",name:"Background %",type:"float",control:"slider",min:0,max:1,decimals:2,"default":0},{key:"edgeColor",name:"Edge Color",type:"vec3",control:"color","default":[0,1,0]},{key:"backgroundColor",name:"Background Color",type:"vec3",control:"color","default":[0,0,0]}],f.prototype=Object.create(r.prototype),f.prototype.constructor=f,f.prototype.update=function(e){var t=e.options||{};t.opacity!==undefined&&(this.copyMaterial.uniforms.opacity=t.opacity/100),t.size!==undefined&&(this.blurX=[.001953125*t.size,0],this.blurY=[0,.001953125*t.size]),e.enabled!==undefined&&(this.enabled=e.enabled)},f.label="Blur",f.options=[{key:"opacity",name:"Amount",type:"int",control:"slider",min:0,max:100,"default":100},{key:"size",name:"Size",type:"float",control:"slider",min:0,max:5,decimals:1,"default":1}],l.prototype=Object.create(t.prototype),l.prototype.construcor=l,l.prototype.update=function(e){var t=e.options,n=this.material.shader;t.offset!==undefined&&(n.uniforms.offset=t.offset),t.darkness!==undefined&&(n.uniforms.darkness=t.darkness),e.enabled!==undefined&&(this.enabled=e.enabled)},l.label="Vignette",l.options=[{key:"offset",type:"float",control:"slider",name:"Offset",min:0,max:10,decimals:1,"default":1},{key:"darkness",type:"float",control:"slider",name:"Darkness",min:0,max:2,decimals:2,"default":1.5}],c.prototype=Object.create(t.prototype),c.prototype.constructor=c,c.prototype.update=function(e){var t=e.options;t.amount!==undefined&&(this.material.uniforms.amount=t.amount/100),e.enabled!==undefined&&(this.enabled=e.enabled)},c.label="Sepia",c.options=[{key:"amount",name:"Amount",type:"int",control:"slider",min:0,max:100,"default":100}],h.prototype=Object.create(t.prototype),h.prototype.constructor=h,h.prototype.update=function(e){var t=e.options,n=this.material.shader;t.nIntensity!==undefined&&(n.uniforms.nIntensity=t.nIntensity/100),t.sIntensity!==undefined&&(n.uniforms.sIntensity=t.sIntensity/100),t.sCount!==undefined&&(n.uniforms.sCount=t.sCount),e.enabled!==undefined&&(this.enabled=e.enabled)},h.label="Film Grain",h.options=[{key:"nIntensity",type:"int",control:"slider",name:"Noise",min:0,max:100,"default":50},{key:"sIntensity",type:"int",control:"slider",name:"Line Intensity",min:0,max:100,"default":50},{key:"sCount",type:"int",control:"slider",name:"Line Count",min:1,max:4096,"default":1024}],p.prototype=Object.create(t.prototype),p.prototype.constructor=p,p.prototype.update=function(e){var t=e.options,n=this.material.shader;t.nIntensity!==undefined&&(n.uniforms.nIntensity=t.nIntensity/100),e.enabled!==undefined&&(this.enabled=e.enabled)},p.label="Noise",p.options=[{key:"nIntensity",type:"int",control:"slider",name:"Noise",min:0,max:100,"default":50}],d.prototype=Object.create(t.prototype),d.prototype.constructor=d,d.prototype.update=function(e){var t=e.options,n=this.material.shader;t.amount!==undefined&&(n.uniforms.amount=t.amount),t.angle!==undefined&&(n.uniforms.angle=t.angle),e.enabled!==undefined&&(this.enabled=e.enabled)},d.label="RgbShift",d.options=[{key:"amount",type:"float",control:"slider",name:"Amount",min:0,max:.05,decimals:3,"default":.005},{key:"angle",type:"float",control:"slider",name:"Angle",min:0,max:6.28,decimals:1,"default":0}],v.prototype=Object.create(t.prototype),v.prototype.constructor=v,v.prototype.update=function(e){var t=e.options,n=this.material.shader;t.opacity!==undefined&&(n.uniforms.opacity=t.opacity),e.enabled!==undefined&&(this.enabled=e.enabled)},v.label="Bleach",v.options=[{key:"opacity",type:"float",control:"slider",name:"Opacity",min:0,max:1,decimals:2,"default":1}],m.prototype=Object.create(t.prototype),m.prototype.constructor=m,m.prototype.update=function(e){var t=e.options,n=this.material.shader;t.hue!==undefined&&(n.uniforms.hue=t.hue),t.saturation!==undefined&&(n.uniforms.saturation=t.saturation),t.brightness!==undefined&&(n.uniforms.brightness=t.brightness),e.enabled!==undefined&&(this.enabled=e.enabled)},m.label="HSB",m.options=[{key:"hue",type:"float",control:"slider",name:"Hue",min:-1,max:1,decimals:2,"default":0},{key:"saturation",type:"float",control:"slider",name:"Saturation",min:-1,max:1,decimals:2,"default":0},{key:"brightness",type:"float",control:"slider",name:"Brightness",min:-1,max:1,decimals:2,"default":0}],g.prototype=Object.create(t.prototype),g.prototype.constructor=g,g.prototype.update=function(e){var t=e.options,n=this.material.shader;t.color!==undefined&&(n.uniforms.color=t.color),t.amount!==undefined&&(n.uniforms.amount=t.amount),e.enabled!==undefined&&(this.enabled=e.enabled)},g.label="Tint",g.options=[{key:"color",type:"vec3",control:"color",name:"Color","default":[1,1,1]},{key:"amount",type:"float",control:"slider",name:"Amount",min:0,max:1,decimals:2,"default":1}],y.prototype=Object.create(t.prototype),y.prototype.constructor=y,y.prototype.update=function(e){var t=e.options,n=this.material.shader;t.width!==undefined&&(n.uniforms.width=t.width),t.spread!==undefined&&(n.uniforms.spread=t.spread),e.enabled!==undefined&&(this.enabled=e.enabled)},y.label="Hatch",y.options=[{key:"width",type:"float",control:"slider",name:"Width",min:0,max:10,decimals:1,"default":2},{key:"spread",type:"int",control:"slider",name:"Spread",min:1,max:50,"default":8}],b.prototype=Object.create(t.prototype),b.prototype.constructor=b,b.prototype.update=function(e){var t=e.options,n=this.material.shader;t.angle!==undefined&&(n.uniforms.angle=t.angle),t.scale!==undefined&&(n.uniforms.scale=t.scale),t.sizex!==undefined&&(n.uniforms.tSize[0]=t.sizex),t.sizey!==undefined&&(n.uniforms.tSize[1]=t.sizey),e.enabled!==undefined&&(this.enabled=e.enabled)},b.label="Dot",b.options=[{key:"angle",type:"float",control:"slider",name:"Angle",min:0,max:10,decimals:2,"default":1.57},{key:"scale",type:"float",control:"slider",name:"Scale",min:0,max:10,decimals:2,"default":1},{key:"sizex",type:"int",control:"slider",name:"SizeX",min:0,max:1024,"default":256},{key:"sizey",type:"int",control:"slider",name:"SizeY",min:0,max:1024,"default":256}],w.prototype=Object.create(t.prototype),w.prototype.constructor=w,w.prototype.update=function(e){var t=e.options,n=this.material.shader;t.brightness!==undefined&&(n.uniforms.brightness=t.brightness),t.contrast!==undefined&&(n.uniforms.contrast=t.contrast),t.saturation!==undefined&&(n.uniforms.saturation=t.saturation),e.enabled!==undefined&&(this.enabled=e.enabled)},w.label="Contrast",w.options=[{key:"brightness",type:"float",control:"slider",name:"Brightness",min:-1,max:1,decimals:2,"default":0},{key:"contrast",type:"float",control:"slider",name:"Contrast",min:0,max:1,"default":0},{key:"saturation",type:"float",control:"slider",name:"Saturation",min:-1,max:1,decimals:2,"default":0}],E.prototype=Object.create(s.prototype),E.prototype.constructor=E,E.prototype.update=function(e){var t=e.options,n=this.inPass.material.shader;t.blend!==undefined&&(n.uniforms.blend=t.blend),t.scale!==undefined&&(n.uniforms.scale=t.scale),e.enabled!==undefined&&(this.enabled=e.enabled)},E.label="Motion Blur",E.options=[{key:"blend",type:"float",control:"slider",name:"Amount",min:0,max:1,"default":.5},{key:"scale",type:"float",name:"Scale",min:.2,"default":1,scale:.01}],S.prototype=Object.create(t.prototype),S.prototype.constructor=S,S.prototype.update=function(e){var t=e.options,n=this.material.shader;t.span!==undefined&&(n.uniforms.FXAA_SPAN_MAX=t.span,n.uniforms.FXAA_REDUCE_MUL=1/t.span),e.enabled!==undefined&&(this.enabled=e.enabled)},S.label="Antialias",S.options=[{key:"span",type:"int",control:"slider",name:"Span",min:0,max:16,"default":8}],x.prototype=Object.create(t.prototype),x.prototype.constructor=x,x.prototype.update=function(e){var t=e.options,n=this.material.shader;t.offset!==undefined&&(n.uniforms.offset=t.offset),t.multiplier!==undefined&&(n.uniforms.multiplier=t.multiplier),e.enabled!==undefined&&(this.enabled=e.enabled)},x.label="Radial",x.options=[{key:"offset",type:"float",control:"slider",name:"Offset",min:-1,max:1,decimals:2,"default":-0.5},{key:"multiplier",type:"float",control:"slider",name:"Multiplier",min:-1,max:1,decimals:2,"default":.75}],T.prototype=Object.create(t.prototype),T.prototype.constructor=T,T.blendmodes=["Normal","Lighten","Darken","Multiply","Average","Add","Substract","Difference","Negation","Exclusion","Screen","Overlay","SoftLight","HardLight","ColorDodge","ColorBurn","LinearLight","VividLight","PinLight","HardMix","Reflect","Glow","Phoenix"],T.prototype.update=function(e){var t=e.options,n=this.material.shader;if(t.blendmode!==undefined){var r=T.blendmodes.indexOf(t.blendmode);r!==n.defines.OVERLAY_TYPE&&(n.defines.OVERLAY_TYPE=r,n.uniforms.amount=t.amount-.01)}t.amount!==undefined&&(n.uniforms.amount=t.amount),t.url!=null?this.material.setTexture("OVERLAY_MAP",t.url):this.material.removeTexture("OVERLAY_MAP"),e.enabled!==undefined&&(this.enabled=e.enabled)},T.label="Overlay",T.options=[{key:"url",name:"Texture",type:"texture","default":{enabled:!0}},{key:"blendmode",name:"Blend Mode",type:"string",control:"select",options:T.blendmodes,"default":"Normal"},{key:"amount",name:"Amount",type:"float",control:"slider",min:0,max:1,decimals:2,"default":1}],N.prototype=Object.create(t.prototype),N.prototype.constructor=N,N.prototype.update=function(e){var t=e.options,n=this.material.shader;t.gamma!==undefined&&(n.uniforms.gamma=t.gamma),t.gamma!==undefined&&(n.uniforms.gamma=t.gamma),t.minInput!==undefined&&(n.uniforms.minInput=t.minInput),t.maxInput!==undefined&&(n.uniforms.maxInput=t.maxInput),t.minOutput!==undefined&&(n.uniforms.minOutput=t.minOutput),t.maxOutput!==undefined&&(n.uniforms.maxOutput=t.maxOutput),e.enabled!==undefined&&(this.enabled=e.enabled)},N.label="Levels",N.options=[{key:"gamma",type:"float",control:"slider",name:"Gamma",min:0,max:5,decimals:2,"default":1},{key:"minInput",type:"float",control:"slider",name:"Min Input",min:0,max:1,decimals:2,"default":0},{key:"maxInput",type:"float",control:"slider",name:"Max Input",min:0,max:1,decimals:2,"default":1},{key:"minOutput",type:"float",control:"slider",name:"Min Output",min:0,max:1,decimals:2,"default":0},{key:"maxOutput",type:"float",control:"slider",name:"Max Output",min:0,max:1,decimals:2,"default":1}],{Bloom:u,Blur:f,Vignette:l,Sepia:c,Grain:h,Noise:p,RgbShift:d,Bleach:v,HSB:m,Colorify:g,Hatch:y,Dot:b,Contrast:w,DiffOfGaussians:a,MotionBlur:E,Antialias:S,Radial:x,Overlay:T,Levels:N}}),define("goo/passpack/SSAOPass",["goo/renderer/Material","goo/renderer/pass/RenderTarget","goo/renderer/Util","goo/renderer/MeshData","goo/renderer/Shader","goo/renderer/shaders/ShaderFragment","goo/renderer/pass/RenderPass","goo/renderer/pass/FullscreenPass","goo/passpack/BlurPass","goo/passpack/ShaderLibExtra","goo/renderer/pass/Pass"],function(e,t,n,r,i,s,o,u,a,f,l){function c(t){this.depthPass=new o(t),this.depthPass.clearColor.set(1,1,1,1);var n=new e(h);this.depthPass.overrideMaterial=n,this.downsampleAmount=4;var r=window.innerWidth||1024,i=window.innerHeight||1024;this.updateSize({x:0,y:0,width:r,height:i}),this.enabled=!0,this.clear=!1,this.needsSwap=!0}c.prototype=Object.create(l.prototype),c.prototype.constructor=c,c.prototype.updateSize=function(e){var r=Math.floor(e.width/this.downsampleAmount),i=Math.floor(e.height/this.downsampleAmount),s=n.clone(f.ssao);s.uniforms.size=[r,i],this.outPass=new u(s),this.outPass.useReadBuffer=!1,this.blurPass=new a({sizeX:r,sizeY:i}),this.depthTarget=new t(r,i,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps"}),console.log("UPDATE SSAOPASS: ",r,i)},c.prototype.render=function(e,t,n,r){this.depthPass.render(e,null,this.depthTarget,r),this.outPass.material.setTexture(i.DIFFUSE_MAP,n),this.outPass.material.setTexture(i.DEPTH_MAP,this.depthTarget),this.outPass.render(e,t,n,r)};var h={attributes:{vertexPosition:r.POSITION},uniforms:{viewMatrix:i.VIEW_MATRIX,projectionMatrix:i.PROJECTION_MATRIX,worldMatrix:i.WORLD_MATRIX},vshader:["attribute vec3 vertexPosition;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","void main(void) {","	gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["precision mediump float;",s.methods.packDepth,"void main(void) {","	gl_FragColor = packDepth(gl_FragCoord.z);","}"].join("\n")};return c}),define("goo/passpack/PassRegister",["goo/scripts/Scripts","goo/passpack/BloomPass","goo/passpack/BlurPass","goo/passpack/DOFPass","goo/passpack/DepthPass","goo/passpack/DoGPass","goo/passpack/MotionBlurPass","goo/passpack/NesPass","goo/passpack/PassLib","goo/passpack/SSAOPass"],function(e){var t=["goo/scripts/Scripts","goo/passpack/BloomPass","goo/passpack/BlurPass","goo/passpack/DOFPass","goo/passpack/DepthPass","goo/passpack/DoGPass","goo/passpack/MotionBlurPass","goo/passpack/NesPass","goo/passpack/PassLib","goo/passpack/SSAOPass"];for(var n=1;n<t.length;n++){var r=t[n].slice(t[n].lastIndexOf("/")+1);e.addClass(r,arguments[n])}}),define("goo/passpack/PosteffectsHandler",["goo/loaders/handlers/ConfigHandler","goo/util/ArrayUtil","goo/util/rsvp","goo/util/PromiseUtil","goo/util/ObjectUtil","goo/renderer/pass/Composer","goo/renderer/pass/RenderPass","goo/renderer/pass/FullscreenPass","goo/renderer/shaders/ShaderLib","goo/renderer/Util","goo/passpack/PassLib"],function(e,t,n,r,i,s,o,u,a,f,l){function c(){e.apply(this,arguments),this._composer=new s;var t=this.world.getSystem("RenderSystem");this._renderPass=new o(t.renderList),this._outPass=new u(f.clone(a.copy)),this._outPass.renderToScreen=!0}return c.prototype=Object.create(e.prototype),c.prototype.constructor=c,e._registerClass("posteffects",c),c.prototype._remove=function(e){var n=this.world.getSystem("RenderSystem");t.remove(n.composers,this._composer),delete this._objects[e],this.world&&this._composer.destroy(this.world.gooRunner.renderer),this._composer=new s},c.prototype._create=function(){return[]},c.prototype._update=function(r,s,o){var u=this;return e.prototype._update.call(this,r,s,o).then(function(e){if(!e)return;var t=e.slice(),r=[];return i.forEach(s.posteffects,function(e){r.push(u._updateEffect(e,t,o))},null,"sortValue"),n.all(r).then(function(t){for(var n=0;n<t.length;n++)e[n]=t[n];return e.length=n,e})}).then(function(e){if(!e)return;var n=e.some(function(e){return e.enabled}),r=u.world.getSystem("RenderSystem"),i=u._composer;if(n){i.passes=[],i.addPass(u._renderPass);for(var s=0;s<e.length;s++){var o=e[s];o&&o.enabled&&i.addPass(e[s],u.world.gooRunner.renderer)}i.addPass(u._outPass),r.composers.indexOf(i)===-1&&r.composers.push(i)}else t.remove(r.composers,u._composer);return e})},c.prototype._updateEffect=function(e,t,r){function s(t,n){return i._load(n,r).then(function(n){e.options[t]=n})}var i=this,o;for(var u=0;u<t.length;u++)if(t[u].id===e.id){o=t[u];break}if(!o){if(!l[e.type])return null;o=new l[e.type](e.id)}var a=[];for(var u=0;u<l[e.type].options.length;u++){var f=l[e.type].options[u],c=f.key,h=f.type;h==="texture"?e.options[c]&&e.options[c].textureRef&&e.options[c].enabled?a.push(s(c,e.options[c].textureRef)):e.options[c]=null:h==="entity"&&(e.options[c]&&e.options[c].entityRef&&e.options[c].enabled?a.push(s(c,e.options[c].entityRef)):e.options[c]=null)}return n.all(a).then(function(){return o.update(e),o})},c}),require(["goo/passpack/BloomPass","goo/passpack/BlurPass","goo/passpack/DOFPass","goo/passpack/DepthPass","goo/passpack/DoGPass","goo/passpack/MotionBlurPass","goo/passpack/NesPass","goo/passpack/PassLib","goo/passpack/PassRegister","goo/passpack/PosteffectsHandler","goo/passpack/SSAOPass","goo/passpack/ShaderLibExtra"],function(e,t,n,r,i,s,o,u,a,f,l,c){var h=window.goo;if(!h)return;h.BloomPass=e,h.BlurPass=t,h.DOFPass=n,h.DepthPass=r,h.DoGPass=i,h.MotionBlurPass=s,h.NesPass=o,h.PassLib=u,h.PassRegister=a,h.PosteffectsHandler=f,h.SSAOPass=l,h.ShaderLibExtra=c}),define("goo/passpack/passpack",function(){});
}try{
if(window.localStorage&&window.localStorage.gooPath){
window.require.config({
paths:{goo:localStorage.gooPath}
});
}else f()
}catch(e){f()}
})(window)