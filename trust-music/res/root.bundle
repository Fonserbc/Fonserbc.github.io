{"6a6e5ab26a7a48e7b8aa248f4ed5522e.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level2other.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T19:26:15+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T19:26:15+00:00", "repeat": [1, 1], "imageRef": "eb680a8d1036ef11fd2022b95f0f4c2c8a1b6ab7.png", "offset": [0, 0], "id": "6a6e5ab26a7a48e7b8aa248f4ed5522e.texture", "anisotropy": 1, "wrapT": "Repeat"}, "72b1267cdfa7455bbba87c5276f9074a.entity": {"name": "Chord 4", "license": "CC0", "created": "2014-08-24T15:57:15.640Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T18:13:35+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"1a612285f0a94710a036ec67e5cc7d02.sound": {"soundRef": "1a612285f0a94710a036ec67e5cc7d02.sound", "sortValue": 0}}}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "72b1267cdfa7455bbba87c5276f9074a.entity"}, "7d0be3c3512d44e08c588ef379278d8e.entity": {"name": "simple.frag", "license": "CC0", "created": "2014-08-24T14:30:33.228Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T21:48:15+00:00", "dataModelVersion": 2, "static": false, "components": {"html": {"imageRefs": {}, "useTransformComponent": true, "innerHtml": "uniform mat4 viewProjectionMatrix;\r\nuniform mat4 worldMatrix;\r\nuniform sampler2D diffuseMap;\r\nuniform sampler2D normalMap;\r\n\r\nuniform float on;\r\nuniform float time;\r\nuniform float lastPlayTime;\r\n\r\nvarying vec2 texCoord0;\r\nvarying vec3 vCameraRelPos;\r\nvarying vec3 vWorldPos;\r\nvarying vec3 normalPos;\r\n\r\nvoid main(void) {\r\n\tvec3 normal = normalPos - vWorldPos;\r\n\t\r\n\tfloat cameraDistance = length(vCameraRelPos);\r\n\tfloat cameraDistanceFactor = 1.0 - cameraDistance / 10.0;\r\n\tcameraDistanceFactor = max(0.07, cameraDistanceFactor);\r\n\t\r\n\tvec2 texCoord = texCoord0;\r\n\r\n\tvec4 final_color = texture2D(diffuseMap, texCoord);\r\n\tif (final_color.a < 0.1) discard;\r\n\t\r\n\tfloat playDistanceMax = (time - lastPlayTime) * 7.0;\r\n\tfloat playDepth = 5.0 * (1.0 + length(vec3(1.0) - final_color.rgb));\r\n\tfloat playFactor = cameraDistance > playDistanceMax? 0.0 : 1.0 - (playDistanceMax - cameraDistance)/playDepth;\r\n\tif (on > 0.01) playFactor = 0.0;\r\n\tplayFactor *= cameraDistanceFactor;\r\n\tvec4 playColor = texture2D(diffuseMap, texCoord)*vec4(1.0, 0.56, 0.0, 1.0)*(1.0 - on)*playFactor;\r\n\t\r\n\tfloat black = mix(on, on*cameraDistanceFactor, 1.0 - on);\r\n\t\r\n\tfinal_color.rgb *= cameraDistanceFactor * max(black, playFactor);\r\n\t\r\n\tfinal_color.rgb += playColor.rgb;\r\n\r\n\tgl_FragColor = final_color;\r\n}"}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "7d0be3c3512d44e08c588ef379278d8e.entity"}, "b48ba0247c1b4351ac1fa2a5fc6507d8.sound": {"name": "6", "license": "CC0", "created": "2014-08-24T18:13:14.999Z", "deleted": false, "audioRefs": {"mp3": "0ee7dbfc6f988aa241c1c25e436d0763cc8c32e6.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T18:13:30+00:00", "volume": 1, "id": "b48ba0247c1b4351ac1fa2a5fc6507d8.sound", "loop": false}, "a03031c055e14408b8dec9555c359ec0.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level2background.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T19:17:44+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T19:17:44+00:00", "repeat": [1, 1], "imageRef": "7f72bbb526a48307f06a3444caac244697368012.png", "offset": [0, 0], "id": "a03031c055e14408b8dec9555c359ec0.texture", "anisotropy": 1, "wrapT": "Repeat"}, "318aa49460df4f859050d0f738b1e165.entity": {"name": "wall.frag", "license": "CC0", "created": "2014-08-23T14:42:08.461Z", "deleted": false, "_readOnly": false, "modified": "2014-08-25T11:23:02+00:00", "dataModelVersion": 2, "static": false, "components": {"html": {"imageRefs": {}, "useTransformComponent": true, "innerHtml": "uniform mat4 viewProjectionMatrix;\r\nuniform mat4 worldMatrix;\r\nuniform sampler2D diffuseMap;\r\nuniform sampler2D normalMap;\r\n\r\nuniform float on;\r\nuniform float time;\r\nuniform float lastPlayTime;\r\n\r\nvarying vec2 texCoord0;\r\nvarying vec3 vCameraRelPos;\r\nvarying vec3 vWorldPos;\r\nvarying vec3 normalPos;\r\n\r\nvoid main(void) {\r\n\tvec3 normal = normalPos - vWorldPos;\r\n\t\r\n\tfloat cameraDistance = length(vCameraRelPos);\r\n\tfloat cameraDistanceFactor = 1.0 - cameraDistance / 10.0;\r\n\tcameraDistanceFactor = max(0.07, cameraDistanceFactor);\r\n\t\r\n\tvec3 f = fract(vWorldPos);\r\n\tvec2 texCoord = vec2(f.x, f.y);\r\n\tif (texCoord.x <= 0.001 || texCoord.x >= 0.999) {\r\n\t\ttexCoord.x = f.z;\r\n\t}\r\n\tif (texCoord.y <= 0.001 || texCoord.y >= 0.999) {\r\n\t\ttexCoord.y = f.z;\r\n\t}\r\n\telse if (\tf.x > 0.001 && f.x < 0.999\r\n\t\t\t&& \tf.y > 0.001 && f.y < 0.999\r\n\t\t\t&& \tf.z > 0.001 && f.z < 0.999) {\r\n\t\ttexCoord.y = f.z;\r\n\t}\r\n\r\n\tvec4 final_color = texture2D(diffuseMap, texCoord);\r\n\tif (final_color.a < 0.1) discard;\r\n\t\r\n\tfloat playDistanceMax = (time - lastPlayTime) * 7.0;\r\n\tfloat playDepth = 6.3 * (1.0 + length(vec3(1.0) - final_color.rgb));\r\n\tfloat playFactor = cameraDistance > playDistanceMax? 0.0 : 1.0 - (playDistanceMax - cameraDistance)/playDepth;\r\n\tif (on > 0.01) playFactor = 0.0;\r\n\tplayFactor *= cameraDistanceFactor;\r\n\tvec4 playColor = texture2D(diffuseMap, texCoord)*vec4(1.0, 0.56, 0.0, 1.0)*(1.0 - on)*playFactor;\r\n\t\r\n\tfloat black = mix(on, on*cameraDistanceFactor, 1.0 - on);\r\n\t\r\n\tfinal_color.rgb *= cameraDistanceFactor * max(black, playFactor);\r\n\t\r\n\tfinal_color.rgb += playColor.rgb;\r\n\r\n\tgl_FragColor = final_color;\r\n}"}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "318aa49460df4f859050d0f738b1e165.entity"}, "d2617d1aec8b4f74910d6049a4405c05.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level1collision.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T17:10:31+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T17:10:31+00:00", "repeat": [1, 1], "imageRef": "7fa41b7090ee0b718908653b2372c695e0d72fd2.png", "offset": [0, 0], "id": "d2617d1aec8b4f74910d6049a4405c05.texture", "anisotropy": 1, "wrapT": "Repeat"}, "df585b6cf7834e7bbcfe71dc72cebcc8.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level1background.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T17:10:28+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T17:10:28+00:00", "repeat": [1, 1], "imageRef": "f81bf66fb239c943dc8aa687482456e5d5b09cc5.png", "offset": [0, 0], "id": "df585b6cf7834e7bbcfe71dc72cebcc8.texture", "anisotropy": 1, "wrapT": "Repeat"}, "933542baf0264eb2ab2b7b77b0c46cf4.entity": {"name": "simple.vert", "license": "CC0", "created": "2014-08-23T14:57:25.014Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T14:35:55+00:00", "dataModelVersion": 2, "static": false, "components": {"html": {"imageRefs": {}, "useTransformComponent": true, "innerHtml": "attribute vec3 vertexPosition;\r\nattribute vec3 vertexNormal;\r\nattribute vec2 vertexUV0;\r\n\r\nuniform mat4 viewProjectionMatrix;\r\nuniform mat4 worldMatrix;\r\nuniform vec3 cameraPosition;\r\n\r\nvarying vec2 texCoord0;\r\nvarying vec3 vCameraRelPos;\r\nvarying vec3 vWorldPos;\r\nvarying vec3 normalPos;\r\n\r\n\r\nvoid main(void) {\r\n\tvec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);\r\n\tvWorldPos = worldPos.xyz;\r\n\tnormalPos = (worldMatrix * vec4(vertexPosition + vertexNormal, 1.0)).xyz;\r\n\tvCameraRelPos = cameraPosition - worldPos.xyz;\r\n\ttexCoord0 = vertexUV0;\r\n\tgl_Position = viewProjectionMatrix * worldPos;\t\t\t\r\n}"}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "933542baf0264eb2ab2b7b77b0c46cf4.entity"}, "1c5e95626a6044e3aaa4403b0d038555.entity": {"name": "Chord 6", "license": "CC0", "created": "2014-08-24T15:57:15.640Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T18:13:30+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"b48ba0247c1b4351ac1fa2a5fc6507d8.sound": {"soundRef": "b48ba0247c1b4351ac1fa2a5fc6507d8.sound", "sortValue": 0}}}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "1c5e95626a6044e3aaa4403b0d038555.entity"}, "129cf518e24e46c1a8f7d981d544c1e7.entity": {"name": "Level", "license": "CC0", "created": "2014-08-23T08:35:48.974Z", "deleted": false, "_readOnly": false, "modified": "2014-09-16T23:50:38.063793+00:00", "dataModelVersion": 2, "static": true, "components": {"transform": {"translation": [0.5, 0, 0.5], "scale": [1, 1, 1], "rotation": [0, 0, 0], "children": {}}, "script": {"scripts": {"c2d3a03852a84ad9bfb3fd6b7ac37e7e.scriptInstance": {"options": {"slope": 2.3, "level2other": {"textureRef": "6a6e5ab26a7a48e7b8aa248f4ed5522e.texture"}, "level3other": {"textureRef": "70bb01da06f24f70b0e8fbf4694fd10b.texture"}, "level2collision": {"textureRef": "f9a1517f34c2406ab3372d1bc5784723.texture"}, "bookTexture": {"textureRef": "7c8cabc11a274179bcde2ae250b8bcee.texture"}, "level1other": {"textureRef": "42b443fb6bf74043afe74c2e36bb94df.texture"}, "level1collision": {"textureRef": "d2617d1aec8b4f74910d6049a4405c05.texture"}, "enabled": true, "floorTexture": {"textureRef": "462c20b9e50d4e26a80518ebd111dd97.texture"}, "level3background": {"textureRef": "f7a2c378a4204c638493acd40d386c5c.texture"}, "level3collision": {"textureRef": "82bc8c4a9eb240c49b0e4c611579b95b.texture"}, "level2background": {"textureRef": "a03031c055e14408b8dec9555c359ec0.texture"}, "height": 3, "wallTexture": {"textureRef": "4f70c1079e224f6fbf6742d80481abf6.texture"}, "level1background": {"textureRef": "df585b6cf7834e7bbcfe71dc72cebcc8.texture"}}, "scriptRef": "e0a0e11836cf4c1590813f323e95e64c.script", "sortValue": 0, "name": "Custom script"}}}}, "hidden": false, "id": "129cf518e24e46c1a8f7d981d544c1e7.entity"}, "d2ca05bd26624fbbbe1c92f1b7022c47.environment": {"sound": {"volume": 1, "dopplerFactor": 0, "reverb": 0, "rolloffFactor": 0.4, "maxDistance": 100}, "globalAmbient": [0, 0, 0, 0], "license": "CC0", "created": "2014-08-23T07:28:27+00:00", "deleted": false, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T23:48:28+00:00", "fog": {"color": [1, 1, 1], "far": 996, "near": 0, "enabled": false}, "backgroundColor": [0, 0, 0, 1], "id": "d2ca05bd26624fbbbe1c92f1b7022c47.environment", "name": "Default Environment"}, "3176b830fb874cee980626775aaf5ed9.script": {"body": "/**\n * Implement this method to do initializing.\n * Called when pressing play and when running exported projects.\n */\nvar setup = function(args, ctx, goo) {\n\tvar titleJq = ctx.titleJq = $('#dialogTitle');\n\tvar subJq = ctx.subJq = $('#dialogSub');\n\t\n\tctx.worldData.showDialog = function (title, subtitle) {\n\t\tif (title) {\n\t\t\ttitleJq.html(title);\n\t\t\ttitleJq.show();\n\t\t}\n\t\tif (subtitle) {\n\t\t\tsubJq.html(subtitle);\n\t\t\tsubJq.show();\n\t\t}\n\t};\n\tctx.worldData.hideDialog = function () {\n\t\ttitleJq.hide(2);\n\t\tsubJq.hide(2);\n\t};\n\t\n\tvar w = ctx.world.by.name;\n\t\n\tctx.worldData.sound = {\n\t\t1: w(\"Chord 1\").first().soundComponent.sounds[0],\n\t\t2: w(\"Chord 2\").first().soundComponent.sounds[0],\n\t\t3: w(\"Chord 3\").first().soundComponent.sounds[0],\n\t\t4: w(\"Chord 4\").first().soundComponent.sounds[0],\n\t\t5: w(\"Chord 5\").first().soundComponent.sounds[0],\n\t\t6: w(\"Chord 6\").first().soundComponent.sounds[0],\n\t\t7: w(\"Chord 7\").first().soundComponent.sounds[0]\n\t};\n\t\n\tctx.worldData.showDialog(\"Loading..\");\n};\n\nvar update = function(args, ctx, goo) {\n\t\n};\n\n/**\n * Implement this method to do cleanup. Called on script stop and delete.\n */\nvar cleanup = function(args, ctx, goo) {};\n\nvar parameters = [];", "name": "DialogManager", "license": "CC0", "created": "2014-08-24T13:51:22.090Z", "deleted": false, "_readOnly": false, "modified": "2014-09-16T23:50:38.161555+00:00", "dataModelVersion": 2, "dependencies": {"https://code.jquery.com/jquery-2.1.1.min.js": {"url": "https://code.jquery.com/jquery-2.1.1.min.js", "sortValue": 0}}, "id": "3176b830fb874cee980626775aaf5ed9.script"}, "a483d6bbee764961a420484333a22c7d.entity": {"name": "Chord 1", "license": "CC0", "created": "2014-08-24T15:57:15.640Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T18:39:29+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"36b92e8f2d6845539e96dc738535f983.sound": {"soundRef": "36b92e8f2d6845539e96dc738535f983.sound", "sortValue": 0}}}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "a483d6bbee764961a420484333a22c7d.entity"}, "dd043350d0524987bbf1a2fda3b9a9c4.skybox": {"box": {"enabled": true}, "name": "Skybox", "license": "CC0", "created": "2014-08-24T23:48:28+00:00", "deleted": false, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T23:48:28+00:00", "id": "dd043350d0524987bbf1a2fda3b9a9c4.skybox"}, "f99763ca304e42de8dfa50aa004eb408.scene": {"canvas": {"resolution": {"width": 1920, "height": 1080}, "mode": "Stretch"}, "initialCameraRef": "d0554436425843e58a05af267c2a1802.entity", "name": "Scene", "license": "CC0", "created": "2014-08-23T07:28:21.811Z", "deleted": false, "environmentRef": "d2ca05bd26624fbbbe1c92f1b7022c47.environment", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-27T13:25:22+00:00", "entities": {"129cf518e24e46c1a8f7d981d544c1e7.entity": {"entityRef": "129cf518e24e46c1a8f7d981d544c1e7.entity", "sortValue": 4}, "1f327f2123c945a8863602c6edd0c10f.entity": {"entityRef": "1f327f2123c945a8863602c6edd0c10f.entity", "sortValue": 5}, "d0554436425843e58a05af267c2a1802.entity": {"entityRef": "d0554436425843e58a05af267c2a1802.entity", "sortValue": 0}}, "posteffectsRef": "6db9370727aa48e3b13d9e3da46840e7.posteffects", "id": "f99763ca304e42de8dfa50aa004eb408.scene"}, "46df4326cad14c37b4cc9376d7c37da3.sound": {"name": "7", "license": "CC0", "created": "2014-08-24T18:13:25+00:00", "deleted": false, "audioRefs": {"mp3": "2e023aff23c9ed1f3ce64c2272451d44028991f9.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T18:13:25+00:00", "volume": 1, "id": "46df4326cad14c37b4cc9376d7c37da3.sound", "loop": false}, "b9155764f35b43f68a18fdcad1b99e51.entity": {"name": "Chord 3", "license": "CC0", "created": "2014-08-24T15:57:15.640Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T18:13:37+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"07af4201c8c442c7bb642f13d21ed6e3.sound": {"soundRef": "07af4201c8c442c7bb642f13d21ed6e3.sound", "sortValue": 0}}}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "b9155764f35b43f68a18fdcad1b99e51.entity"}, "f9a1517f34c2406ab3372d1bc5784723.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level2collision.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T19:26:11+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T19:26:11+00:00", "repeat": [1, 1], "imageRef": "4ffdba5d99c7ce80772d14211e825b4c2025552f.png", "offset": [0, 0], "id": "f9a1517f34c2406ab3372d1bc5784723.texture", "anisotropy": 1, "wrapT": "Repeat"}, "70faf6035eb04a0aabc3c9d19c491bd9.entity": {"name": "Dialog", "license": "CC0", "created": "2014-08-24T13:37:42.364Z", "deleted": false, "_readOnly": false, "modified": "2014-09-16T23:50:38.273248+00:00", "dataModelVersion": 2, "static": false, "components": {"html": {"imageRefs": {}, "useTransformComponent": true, "innerHtml": "<p id=\"dialogTitle\" style=\"color:white; font-size:26px; font-family:'Trebuchet MS', Helvetica, sans-serif; margin:0; text-align: center;\">\n</p>\n<br>\n<p id=\"dialogSub\" style=\"color:white; font-size:16px; font-family:'Trebuchet MS', Helvetica, sans-serif; margin:0; text-align: center;\">\n</p>\n\n<!-- Hints:\n + it's not recommended to add <script> tags - they will execute in an unpredictable fashion. For scripting please consider using the Script Component.\n + it's also not recommended to use any of the 'on' + event attributes. Please consider using the Script Component instead.\n-->"}, "transform": {"translation": [0, 0, -0.8], "scale": [1, 1, 1], "rotation": [0, 0, 0]}, "script": {"scripts": {"8c1d63e9973347a3b6dd01b17cea2f7a.scriptInstance": {"name": "Custom script", "options": {"enabled": true}, "sortValue": 0, "scriptRef": "3176b830fb874cee980626775aaf5ed9.script"}}}}, "hidden": false, "id": "70faf6035eb04a0aabc3c9d19c491bd9.entity"}, "5caaa3d89bbc4832a3c09447793f8608.entity": {"name": "Chord 2", "license": "CC0", "created": "2014-08-24T15:57:15.640Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T18:39:28+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"b94dce591f904248a1482088e1ac34e9.sound": {"soundRef": "b94dce591f904248a1482088e1ac34e9.sound", "sortValue": 0}}}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "5caaa3d89bbc4832a3c09447793f8608.entity"}, "36b92e8f2d6845539e96dc738535f983.sound": {"name": "1", "license": "CC0", "created": "2014-08-24T18:08:18.863Z", "deleted": false, "audioRefs": {"mp3": "8498ae0e5fff2c77c32d73dd4e45d543d5a5a926.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T18:39:29+00:00", "volume": 1, "id": "36b92e8f2d6845539e96dc738535f983.sound", "loop": false}, "3c5ccb5327a9469daa5be0976b966499.entity": {"name": "fakeWall.frag", "license": "CC0", "created": "2014-08-23T18:22:11.249Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T10:43:26+00:00", "dataModelVersion": 2, "static": false, "components": {"html": {"imageRefs": {}, "useTransformComponent": true, "innerHtml": "uniform mat4 viewProjectionMatrix;\r\nuniform mat4 worldMatrix;\r\nuniform sampler2D diffuseMap;\r\nuniform sampler2D normalMap;\r\n\r\nuniform float on;\r\n\r\nvarying vec2 texCoord0;\r\nvarying vec3 vCameraRelPos;\r\nvarying vec3 vWorldPos;\r\nvarying vec3 normalPos;\r\n\r\nvoid main(void) {\r\n\tfloat cameraDistance = length(vCameraRelPos);\r\n\tfloat cameraDistanceFactor = 1.0 - cameraDistance / 10.0;\r\n\tcameraDistanceFactor = max(0.07, cameraDistanceFactor);\r\n\t\r\n\tvec3 f = fract(vWorldPos);\r\n\tvec2 texCoord = vec2(f.x, f.y);\r\n\tif (texCoord.x <= 0.001 || texCoord.x >= 0.999) {\r\n\t\ttexCoord.x = f.z;\r\n\t}\r\n\tif (texCoord.y <= 0.001 || texCoord.y >= 0.999) {\r\n\t\ttexCoord.y = f.z;\r\n\t}\r\n\telse if (\tf.x > 0.001 && f.x < 0.999\r\n\t\t\t&& \tf.y > 0.001 && f.y < 0.999\r\n\t\t\t&& \tf.z > 0.001 && f.z < 0.999) {\r\n\t\ttexCoord.y = f.z;\r\n\t}\r\n\r\n\tvec4 final_color = texture2D(diffuseMap, texCoord);\r\n\t\r\n\tfloat black = mix(on, on*cameraDistanceFactor, 1.0 - on);\r\n\t\r\n\tfinal_color.rgb *= cameraDistanceFactor * black;\r\n\t\r\n\tif (on < 0.1) discard;\r\n\r\n\tgl_FragColor = final_color;\r\n}"}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "3c5ccb5327a9469daa5be0976b966499.entity"}, "07fe929562414ff1876f834c45b798fc.sound": {"name": "5", "license": "CC0", "created": "2014-08-24T18:13:07.671Z", "deleted": false, "audioRefs": {"mp3": "84074e3133ea04b229182618c766588ffcf41546.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T18:13:32+00:00", "volume": 1, "id": "07fe929562414ff1876f834c45b798fc.sound", "loop": false}, "4e79fcd8cf084511833159e310add7cd.script": {"body": "/**\n * Implement this method to do initializing.\n * Called when pressing play and when running exported projects.\n */\nvar setup = function(args, ctx, goo) {\n\t\n\tgoo.cameraEntity = ctx.entity;\n\t\n\tctx.axis = {\n\t\th: 0,\n\t\tv: 0,\n\tr: 0\n\t};\n\t\n\tctx.hsize = {\n\t\tx: 0.3,\n\t\ty: 1,\n\t\tz: 0.3\n\t}\n\t\n\tctx.keyDown = function (e) {\n\t\tswitch (e.keyCode) {\n\t\t\tcase 87: //W\n\t\t\t\tctx.axis.v = 1;\n\t\t\t\tbreak;\n\t\t\tcase 83: //S\n\t\t\t\tctx.axis.v = -1;\n\t\t\t\tbreak;\n\t\t\tcase 65: //A\n\t\t\t\tctx.axis.h = 1;\n\t\t\t\tbreak;\n\t\t\tcase 68: //D\n\t\t\t\tctx.axis.h = -1;\n\t\t\t\tbreak;\n\t\t\tcase 81: //Q\n\t\t\t\tctx.axis.r = -1;\n\t\t\t\tbreak;\n\t\t\tcase 69: //E\n\t\t\t\tctx.axis.r = 1;\n\t\t\t\tbreak;\n\t\t}\n\t};\n\t\n\tctx.keyUp = function (e) {\n\t\tswitch (e.keyCode) {\n\t\t\tcase 87: //W\n\t\t\t\tif (ctx.axis.v == 1) ctx.axis.v = 0;\n\t\t\t\tbreak;\n\t\t\tcase 83: //S\n\t\t\t\tif (ctx.axis.v == -1) ctx.axis.v = 0;\n\t\t\t\tbreak;\n\t\t\tcase 65: //A\n\t\t\t\tif (ctx.axis.h == 1) ctx.axis.h = 0;\n\t\t\t\tbreak;\n\t\t\tcase 68: //D\n\t\t\t\tif (ctx.axis.h == -1) ctx.axis.h = 0;\n\t\t\t\tbreak;\n\t\t\tcase 81: //Q\n\t\t\t\tif (ctx.axis.r == -1) ctx.axis.r = 0;\n\t\t\tcase 69: //E\n\t\t\t\tif (ctx.axis.r == 1) ctx.axis.r = 0;\n\t\t}\n\t};\n\t\n\tdocument.addEventListener(\"keydown\", ctx.keyDown);\n\tdocument.addEventListener(\"keyup\", ctx.keyUp);\n\t\n\tctx.lastTime = ctx.world.time;\n\tctx.vel = new goo.Vector3();\n\tctx.acc = new goo.Vector3();\n\t\n\tctx.needsReset = true;\n\t\n\tctx.walkSound = ctx.entity.soundComponent.sounds[0];\n\t\n\tctx.worldData.resetPlayer = function () {\n\t\tctx.entity.setTranslation(ctx.worldData.startPoint);\n\t\tctx.entity.addTranslation([0.5, ctx.hsize.y, 0.5]);\n\t\tctx.entity.setRotation(goo.Vector3.ZERO);\n\t\t\n\t\tctx.entity.transformComponent.setUpdated();\n\t\tdocument.exitPointerLock();\n\t\tctx.domElement.requestPointerLock();\n\t\t\n\t\tctx.needsReset = false;\n\t\t\n\t\t//ctx.otherCam = ctx.world.createEntity(\"newCamera\", new goo.Camera(), [6, 0, 0]).addToWorld().lookAt(ctx.worldData.startPoint).setAsMainCamera();\n\t\t//console.log(ctx.otherCam, goo.Renderer.mainCamera);\n\t};\n};\n\n/**\n * Implement this method to do cleanup. Called on script stop and delete.\n */\nvar cleanup = function(args, ctx, goo) {\n\tdocument.removeEventListener(\"keydown\", ctx.keyDown);\n\tdocument.removeEventListener(\"keyup\", ctx.keyUp);\n\t\n\t//ctx.otherCam.removeFromWorld();\n};\n\n/**\n * This function will be called every frame.\n *\n * @param {object} args\n * Contains all the parameters defined in the 'parameters' variable below.\n * Its values are chosen in the scripts panel.\n *\n * @param {object} ctx\n * A contextual data object, unique for the script.\n * Properties on this object will be shared between the script's functions.\n * {\n *   entity: Entity,\n *   world: World,\n *   domElement: canvas,\n *   viewportWidth: number,\n *   viewportHeight: number,\n *   activeCameraEntity: Entity,\n *\n *   worldData: object,\n *              // Accessible to all scripts in the world.\n *\t\t\t\t// Example: ctx.worldData.helloString = 'hello';\n *\n *   entityData: object\n *               // Accessible to all scripts on this entity.\n * }\n *\n * @param {object} goo\n * Contains most useful engine classes like goo.Vector3, goo.Matrix3x3, etc.\n * See API documentation for more info on the classes.\n */\nvar update = function(args, ctx, goo) {\n\tif (!ctx.worldData.levelLoaded) {\n\t\tctx.needsReset = true;\n\t\treturn;\n\t}\n\telse if (ctx.needsReset) {\n\t\tctx.worldData.showDialog(\"Open your eyes\", \"(press SPACE..)\");\n\t\tctx.worldData.resetPlayer();\n\t}\n\t\n\t\n\tctx.deltaTime = ctx.world.time - ctx.lastTime;\n\tctx.lastTime = ctx.world.time;\n\t\n\tif (ctx.vel.length() < 0.01) {\n\t\tctx.vel.copy(goo.Vector3.ZERO);\n\t\tctx.walkSound.fadeOut(0.2).then(function() {\n\t\t\tctx.walkSound.pause();\n\t\t}.bind(this));\n\t}\n\telse {\n\t\tif (!ctx.walkSound.isPlaying()) {\n\t\t\tctx.walkSound.fadeIn(0.7);\n\t\t}\n\t\tvar drag = new goo.Vector3().copy(goo.Vector3.ZERO).sub(ctx.vel);\n\t\tvar dragMax = drag.length();\n\t\tdrag.normalize();\n\t\tdrag.scale(Math.min(dragMax, args.drag*ctx.deltaTime));\n\t\t\n\t\tctx.vel.add(drag);\n\t}\n\tvar forward = new goo.Vector3().copy(ctx.entity.cameraComponent.camera._direction);\n\tforward.add(new goo.Vector3().copy(ctx.entity.cameraComponent.camera._left).scale(ctx.deltaTime * ctx.axis.r));\n\t//console.log(ctx.entity.cameraComponent);\n\tforward.add(ctx.entity.cameraComponent.camera.translation);\n\tctx.entity.cameraComponent.camera.lookAt(forward, ctx.entity.cameraComponent.camera._up);\n\t//ctx.entity.cameraComponent.camera.makeDirty();\n\tvar vertical = new goo.Vector3().copy(ctx.entity.cameraComponent.camera._direction);\n\tvertical.y = 0;\n\tvertical.normalize().scale(ctx.axis.v);\n\t\n\tvar horizontal = new goo.Vector3().copy(ctx.entity.cameraComponent.camera._left);\n\thorizontal.y = 0;\n\thorizontal.normalize().scale(ctx.axis.h);\n\t\n\tctx.acc.copy(vertical).add(horizontal).normalize();\n\tctx.acc.scale(ctx.deltaTime*args.acc);\n\t\n\tif (ctx.worldData.eyesOpenFactor < 0.1) ctx.acc.copy(goo.Vector3.ZERO);\n\t\n\tctx.vel.add(ctx.acc);\n\t\n\tif (ctx.vel.length() > args.speed) ctx.vel.normalize().scale(args.speed);\n\t\n\tvar deltaTrans = new goo.Vector3().copy(ctx.vel).scale(ctx.deltaTime);\n\t\n\tctx.entity.addTranslation(deltaTrans);\n\t\n\tvar trans = ctx.entity.getTranslation();\n\t// Floor correction\n\ttrans.y = goo.MathUtils.lerp(ctx.deltaTime*5.0, trans.y, ctx.worldData.getHeight(trans) + ctx.hsize.y);\n\t\n\t// Collision detection\n\tdetectCollision(args, ctx, goo);\n\t\n\tctx.entity.transformComponent.setUpdated();\n};\n\nvar collisionCorrect = {\n\t\"u\" : function (args, ctx, goo, trans) {\n\t\ttrans.z = Math.floor(trans.z) + ctx.hsize.z;\n\t\tif (ctx.vel.z > 0) ctx.vel.z = 0;\n\t},\n\t\"b\" : function (args, ctx, goo, trans) {\n\t\ttrans.z = Math.floor(trans.z) + 1 - ctx.hsize.z;\n\t\tif (ctx.vel.z < 0) ctx.vel.z = 0;\n\t},\n\t\"l\" : function (args, ctx, goo, trans) {\n\t\ttrans.x = Math.floor(trans.x) + ctx.hsize.x;\n\t\tif (ctx.vel.x > 0) ctx.vel.x = 0;\n\t},\n\t\"r\" : function (args, ctx, goo, trans) {\n\t\ttrans.x = Math.floor(trans.x) + 1 - ctx.hsize.x;\n\t\tif (ctx.vel.x < 0) ctx.vel.x = 0;\n\t}\n};\nvar collisionMap = {\n\t\"falsefalsefalsefalse\":\tundefined,\n\t\"truefalsefalsefalse\": \t\"br\",\n\t\"falsetruefalsefalse\":\t\"bl\",\n\t\"truetruefalsefalse\":\t\"b\",\n\t\"falsefalsetruefalse\":\t\"ur\",\n\t\"truefalsetruefalse\":\t\"r\",\n\t\"falsetruetruefalse\":\t\"ulbr\",\n\t\"truetruetruefalse\":\t\"br\",\n\t\n\t\"falsefalsefalsetrue\":\t\"ul\",\n\t\"truefalsefalsetrue\": \t\"urbl\",\n\t\"falsetruefalsetrue\":\t\"l\",\n\t\"truetruefalsetrue\":\t\"bl\",\n\t\"falsefalsetruetrue\":\t\"u\",\n\t\"truefalsetruetrue\":\t\"ur\",\n\t\"falsetruetruetrue\":\t\"ul\",\n\t\"truetruetruetrue\":\t\tundefined\n};\n\nvar detectCollision = function (args, ctx, goo) {\n\tvar col = ctx.worldData.getCollisionXY;\n\tvar trans = ctx.entity.getTranslation();\n\tvar prevTrans = new goo.Vector3().copy(trans);\n\tvar hsize = ctx.hsize;\n\t\n\tvar fract = {\n\t\tx: trans.x - Math.floor(trans.x),\n\t\tz: trans.z - Math.floor(trans.z)\n\t};\n\t\n\tvar ul, ur, bl, br;\n\t\n\tul = !col(trans.x + hsize.x, trans.z + hsize.z);\n\tur = !col(trans.x - hsize.x, trans.z + hsize.z);\n\tbl = !col(trans.x + hsize.x, trans.z - hsize.z);\n\tbr = !col(trans.x - hsize.x, trans.z - hsize.z);\n\tvar count = 0 + ul + ur + bl + br;\n\t\n\tvar correction = collisionMap[\"\"+ul+ur+bl+br];\n\tif (!correction) return;\n\telse if (correction.length == 1) {\n\t\tcollisionCorrect[correction](args, ctx, goo, trans);\n\t}\n\telse if (correction.length == 2) {\n\t\tif (count > 1) {\n\t\t\tcollisionCorrect[correction[0]](args, ctx, goo, trans);\n\t\t\tcollisionCorrect[correction[1]](args, ctx, goo, trans);\n\t\t}\n\t\telse {\n\t\t\tvar hFirst = (fract.x - fract.z)*((1.0 - fract.x) - fract.z) > 0; // Magic\n\t\t\t\n\t\t\tvar curr = {\n\t\t\t\tx: Math.floor(trans.x),\n\t\t\t\tz: Math.floor(trans.z)\n\t\t\t};\n\t\t\tvar wrong = {\n\t\t\t\tx: Math.floor(trans.x + (ul || bl? 1 : -1)*hsize.x),\n\t\t\t\tz: Math.floor(trans.z + (ul || ur? 1 : -1)*hsize.z)\n\t\t\t}\n\t\t\tif ((curr.x == wrong.x && hFirst) || (curr.z == wrong.z && !hFirst)) {\n\t\t\t\thFirst = !hFirst;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tcollisionCorrect[correction[hFirst? 1 : 0]](args, ctx, goo, trans);\n\t\t}\n\t}\n\telse {\n\t\tif (ul) { // UR <-> BL\n\t\t\tvar up = (fract.x - fract.z) > 0;\n\t\t\tcollisionCorrect[up? \"u\" : \"b\"](args, ctx, goo, trans);\n\t\t\tcollisionCorrect[up? \"r\" : \"l\"](args, ctx, goo, trans);\n\t\t}\n\t\telse { // UL <-> BR\n\t\t\tvar up = ((1.0 - fract.x) - fract.z) > 0;\n\t\t\tcollisionCorrect[up? \"u\" : \"b\"](args, ctx, goo, trans);\n\t\t\tcollisionCorrect[up? \"l\" : \"r\"](args, ctx, goo, trans);\n\t\t}\n\t}\n};\n\n/**\n * Parameters defined here will be available on the 'args' object as 'args.key'\n * and customizable using the script panel. Parameters are defined like below.\n * 'key', 'type', and 'default' are required properties.\n * {\n *   key: string,\n *   name: string,\n *   type: enum ('int', 'float', 'string', 'boolean', 'vec3'),\n *   control: enum (\n *    'slider', // Slider with min and max values.\n *    'color',  // Color picker for RGB vec3.\n *    'select', // Used together with the 'options' property.\n *   ),\n *   description: string, // Short tooltip description of the parameter.\n *   options: *[], // Array of values of specified type.\n *   default: *, // Preselected value. One of the options if options are used.\n *   min: number, // Can be used when data type is float or int.\n *   max: number, // Can be used when data type is float or int.\n *   precision: number, // Number of significant digits for float values.\n *   scale: number, // How fast number values change when dragging slider.\n *   exponential: boolean // Can be used together with slider.\n * }\n */\nvar parameters = [\n{\n\tkey: \"speed\",\n\tname: \"Speed\",\n\ttype: \"float\",\n\tdefault: 10\n},\n{\n\tkey: \"acc\",\n\tname: \"Acceleration\",\n\ttype: \"float\",\n\tdefault: 10\n},\n{\n\tkey: \"drag\",\n\tname: \"Drag\",\n\ttype: \"float\",\n\tdefault: 50\n}\n];", "name": "Movement", "license": "CC0", "created": "2014-08-23T07:33:32.970Z", "deleted": false, "_readOnly": false, "modified": "2014-09-16T23:50:38.111244+00:00", "dataModelVersion": 2, "dependencies": {}, "id": "4e79fcd8cf084511833159e310add7cd.script"}, "57fc89ea7d7f41678e25cd8c6ffac6c6.project": {"mainSceneRef": "f99763ca304e42de8dfa50aa004eb408.scene", "dataModelVersion": 2, "name": "LD30 - Trust music", "license": "CC0", "thumbnailRef": "d37a9423c50b81e8e72e74a2801bc6b13ff38c60.png", "deleted": false, "description": "Press SPACE for fullscreen\n\n@fonserbc", "created": "2014-08-23T07:28:21.808Z", "_readOnly": false, "scenes": {"f99763ca304e42de8dfa50aa004eb408.scene": {"sortValue": 0, "sceneRef": "f99763ca304e42de8dfa50aa004eb408.scene"}}, "publishedUrls": {"https://goote.ch/6e55d473840e885bec558f0b3efb34c46fbec7e3": "2014-08-24T22:32:35+00:00", "https://goote.ch/79e37fbf0a8052adf4dbf6dd59f95685b8c0f300": "2014-08-25T08:59:37+00:00", "https://goote.ch/09c1119cf5346ad331d1b2cca8d1a4535d06f866": "2014-08-24T22:50:37+00:00", "https://goote.ch/8cb21c3cdee1d3b3e28dff1e16d430972ba9df3c": "2014-08-24T22:37:09+00:00", "https://goote.ch/c28541f7bd09e15b7bb870a3833e07c092d1dfc6": "2014-08-25T11:18:14+00:00", "https://goote.ch/9a44dcfed29d153f905b61f84c4cd90d0f0f71d0": "2014-09-15T17:46:24.426918+00:00", "https://goote.ch/56b302258b98e72336d5c1d308d20b505495fc2d": "2014-08-24T22:29:14+00:00", "https://goote.ch/342705e1b6138fe8a987a4b2c7f527b53458b38b": "2014-08-26T13:40:43+00:00", "https://goote.ch/81e63d7a7cd9a008cbde32e069914ecd85a8090f": "2014-08-24T22:52:01+00:00", "https://goote.ch/30145f7e15927aaa7444e2a6b16ee5ed585d15da": "2014-08-24T22:38:41+00:00", "https://goote.ch/cf4eba2124b16030ad23d3b57f4727a9bf6075ae": "2014-08-24T22:31:49+00:00", "https://goote.ch/3bbd282e70f8e9ebe36e7bfa8260d6679f66257b": "2014-08-25T11:27:51+00:00", "https://goote.ch/b8f520be996c9822e225daa8643fc87e7ae99be9": "2014-08-25T08:31:43+00:00", "https://goote.ch/8d8d134df90b6d9f0330ef283652f0afd276d0db": "2014-08-25T11:24:37+00:00", "https://goote.ch/b6c6ec0d40158fa11b4b27fce98d2227c4bab89d": "2014-08-24T23:46:47+00:00", "https://goote.ch/4f0077ce1b2638b2c891944b8c2e46664325685f": "2014-08-24T22:21:21+00:00", "https://goote.ch/73ccb21e2a0cb531b9b10a38ec0767e3ffe7ce90": "2014-08-25T19:05:42+00:00", "https://goote.ch/88d2079c426f0f02fbf5ac24a0e92022a7a972e9": "2014-08-25T08:37:25+00:00", "https://goote.ch/db58e5b2817be01d107ec52e77e6c4836436f777": "2014-08-25T08:25:24+00:00", "https://goote.ch/4b95eac85906a38fb2633205af6c65e75012da12": "2014-08-25T08:42:23+00:00"}, "modified": "2014-09-15T17:46:25.004992+00:00", "publishedUrl": "https://goote.ch/57fc89ea7d7f41678e25cd8c6ffac6c6.project", "id": "57fc89ea7d7f41678e25cd8c6ffac6c6.project", "assets": {"6a6e5ab26a7a48e7b8aa248f4ed5522e.texture": {"sortValue": 46, "assetRef": "6a6e5ab26a7a48e7b8aa248f4ed5522e.texture"}, "b48ba0247c1b4351ac1fa2a5fc6507d8.sound": {"sortValue": 40, "assetRef": "b48ba0247c1b4351ac1fa2a5fc6507d8.sound"}, "a03031c055e14408b8dec9555c359ec0.texture": {"sortValue": 42, "assetRef": "a03031c055e14408b8dec9555c359ec0.texture"}, "1a612285f0a94710a036ec67e5cc7d02.sound": {"sortValue": 38, "assetRef": "1a612285f0a94710a036ec67e5cc7d02.sound"}, "df585b6cf7834e7bbcfe71dc72cebcc8.texture": {"sortValue": 33, "assetRef": "df585b6cf7834e7bbcfe71dc72cebcc8.texture"}, "70bb01da06f24f70b0e8fbf4694fd10b.texture": {"sortValue": 56, "assetRef": "70bb01da06f24f70b0e8fbf4694fd10b.texture"}, "3176b830fb874cee980626775aaf5ed9.script": {"sortValue": 27, "assetRef": "3176b830fb874cee980626775aaf5ed9.script"}, "46df4326cad14c37b4cc9376d7c37da3.sound": {"sortValue": 41, "assetRef": "46df4326cad14c37b4cc9376d7c37da3.sound"}, "dd043350d0524987bbf1a2fda3b9a9c4.skybox": {"sortValue": 58, "assetRef": "dd043350d0524987bbf1a2fda3b9a9c4.skybox"}, "b94dce591f904248a1482088e1ac34e9.sound": {"sortValue": 36, "assetRef": "b94dce591f904248a1482088e1ac34e9.sound"}, "07fe929562414ff1876f834c45b798fc.sound": {"sortValue": 39, "assetRef": "07fe929562414ff1876f834c45b798fc.sound"}, "4e79fcd8cf084511833159e310add7cd.script": {"sortValue": 1, "assetRef": "4e79fcd8cf084511833159e310add7cd.script"}, "36b92e8f2d6845539e96dc738535f983.sound": {"sortValue": 43, "assetRef": "36b92e8f2d6845539e96dc738535f983.sound"}, "e0a0e11836cf4c1590813f323e95e64c.script": {"sortValue": 5, "assetRef": "e0a0e11836cf4c1590813f323e95e64c.script"}, "f7a2c378a4204c638493acd40d386c5c.texture": {"sortValue": 57, "assetRef": "f7a2c378a4204c638493acd40d386c5c.texture"}, "462c20b9e50d4e26a80518ebd111dd97.texture": {"sortValue": 53, "assetRef": "462c20b9e50d4e26a80518ebd111dd97.texture"}, "f9a1517f34c2406ab3372d1bc5784723.texture": {"sortValue": 45, "assetRef": "f9a1517f34c2406ab3372d1bc5784723.texture"}, "4f70c1079e224f6fbf6742d80481abf6.texture": {"sortValue": 47, "assetRef": "4f70c1079e224f6fbf6742d80481abf6.texture"}, "483d76b220e2440d8d9f081ec2f5d452.sound": {"sortValue": 44, "assetRef": "483d76b220e2440d8d9f081ec2f5d452.sound"}, "0a07453990c64ff593c9e0645a3db17c.script": {"sortValue": 59, "assetRef": "0a07453990c64ff593c9e0645a3db17c.script"}, "7c8cabc11a274179bcde2ae250b8bcee.texture": {"sortValue": 48, "assetRef": "7c8cabc11a274179bcde2ae250b8bcee.texture"}, "42b443fb6bf74043afe74c2e36bb94df.texture": {"sortValue": 32, "assetRef": "42b443fb6bf74043afe74c2e36bb94df.texture"}, "82bc8c4a9eb240c49b0e4c611579b95b.texture": {"sortValue": 55, "assetRef": "82bc8c4a9eb240c49b0e4c611579b95b.texture"}, "d2617d1aec8b4f74910d6049a4405c05.texture": {"sortValue": 34, "assetRef": "d2617d1aec8b4f74910d6049a4405c05.texture"}, "07af4201c8c442c7bb642f13d21ed6e3.sound": {"sortValue": 37, "assetRef": "07af4201c8c442c7bb642f13d21ed6e3.sound"}}}, "6db9370727aa48e3b13d9e3da46840e7.posteffects": {"name": "Post effects", "license": "CC0", "created": "2014-08-23T07:28:27+00:00", "deleted": false, "_readOnly": false, "dataModelVersion": 2, "posteffects": {}, "modified": "2014-08-24T12:53:30+00:00", "id": "6db9370727aa48e3b13d9e3da46840e7.posteffects"}, "483d76b220e2440d8d9f081ec2f5d452.sound": {"name": "walk", "license": "CC0", "created": "2014-08-24T18:20:05.352Z", "deleted": false, "audioRefs": {"mp3": "232e295ce16ce424b27826f0547794c644591613.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T19:41:28+00:00", "volume": 0.3, "id": "483d76b220e2440d8d9f081ec2f5d452.sound", "loop": true}, "f7a2c378a4204c638493acd40d386c5c.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level3background.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T23:45:51+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T23:45:51+00:00", "repeat": [1, 1], "imageRef": "9cdc6b5b6f048d06dfd93bb353be9231dbdb10ec.png", "offset": [0, 0], "id": "f7a2c378a4204c638493acd40d386c5c.texture", "anisotropy": 1, "wrapT": "Repeat"}, "42b443fb6bf74043afe74c2e36bb94df.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level1other.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T16:59:22+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T16:59:22+00:00", "repeat": [1, 1], "imageRef": "84df41b690d57e756096537bc33e328b0a97d1dc.png", "offset": [0, 0], "id": "42b443fb6bf74043afe74c2e36bb94df.texture", "anisotropy": 1, "wrapT": "Repeat"}, "e0a0e11836cf4c1590813f323e95e64c.script": {"body": "var readFile = function(ctx, name) {\n\tvar rs = ctx.world.by.name(name).first();\n\tvar html = rs.htmlComponent.domElement.innerHTML;\n\tvar div = $('<div/>');\n\tvar res = div.html(html).text();\n\tdiv.remove();\n\treturn res;\n};\n\nvar createShaders = function (args, ctx, goo) {\n\tctx.shaders[\"simpleShader\"] = {\n\t\tattributes: {\n\t\t\tvertexPosition: goo.MeshData.POSITION,\n\t\t\tvertexUV0: goo.MeshData.TEXCOORD0,\n\t\t\tvertexNormal: goo.MeshData.NORMAL,\n\t\t},\n\t\tuniforms: {\n\t\t\tviewProjectionMatrix: goo.Shader.VIEW_PROJECTION_MATRIX,\n\t\t\tworldMatrix: goo.Shader.WORLD_MATRIX,\n\t\t\tcameraPosition: goo.Shader.CAMERA,\n\t\t\tdiffuseMap: goo.Shader.DIFFUSE_MAP,\n\t\t\ton: \"ON\",\n\t\t\ttime: function () {\n\t\t\t\treturn ctx.world.time;\n\t\t\t},\n\t\t\tlastPlayTime: \"LAST_PLAY_TIME\"\n\t\t},\n\t\tvshader: readFile(ctx, \"simple.vert\"),\n\t\tfshader: readFile(ctx, \"simple.frag\")\n\t};\n\t\n\tctx.shaders[\"wallShader\"] = {\n\t\tattributes: {\n\t\t\tvertexPosition: goo.MeshData.POSITION,\n\t\t\tvertexUV0: goo.MeshData.TEXCOORD0,\n\t\t\tvertexNormal: goo.MeshData.NORMAL,\n\t\t},\n\t\tuniforms: {\n\t\t\tviewProjectionMatrix: goo.Shader.VIEW_PROJECTION_MATRIX,\n\t\t\tworldMatrix: goo.Shader.WORLD_MATRIX,\n\t\t\tcameraPosition: goo.Shader.CAMERA,\n\t\t\tdiffuseMap: goo.Shader.DIFFUSE_MAP,\n\t\t\tnormalMap: goo.Shader.NORMAL_MAP,\n\t\t\ton: \"ON\",\n\t\t\ttime: function () {\n\t\t\t\treturn ctx.world.time;\n\t\t\t},\n\t\t\tlastPlayTime: \"LAST_PLAY_TIME\"\n\t\t},\n\t\tvshader: readFile(ctx, \"simple.vert\"),\n\t\tfshader: readFile(ctx, \"wall.frag\")\n\t};\n\t\t\n\tctx.shaders[\"fakeWallShader\"] = {\n\t\tattributes: {\n\t\t\tvertexPosition: goo.MeshData.POSITION,\n\t\t\tvertexUV0: goo.MeshData.TEXCOORD0,\n\t\t\tvertexNormal: goo.MeshData.NORMAL,\n\t\t},\n\t\tuniforms: {\n\t\t\tviewProjectionMatrix: goo.Shader.VIEW_PROJECTION_MATRIX,\n\t\t\tworldMatrix: goo.Shader.WORLD_MATRIX,\n\t\t\tcameraPosition: goo.Shader.CAMERA,\n\t\t\tdiffuseMap: goo.Shader.DIFFUSE_MAP,\n\t\t\tnormalMap: goo.Shader.NORMAL_MAP,\n\t\t\ton: \"ON\"\n\t\t},\n\t\tvshader: readFile(ctx, \"simple.vert\"),\n\t\tfshader: readFile(ctx, \"fakeWall.frag\")\n\t};\n};\n\nvar createMaterial = function (args, ctx, goo, name, shader, diffuseMap, normalMap) {\n\tvar material = new goo.Material(name, ctx.shaders[shader]);\n\tif (diffuseMap) material.setTexture(goo.Shader.DIFFUSE_MAP, diffuseMap);\n\tif (normalMap) material.setTexture(goo.Shader.NORMAL_MAP, normalMap);\n\t\n\tctx.materials[name] = material;\n\tmaterial.uniforms.on = 0.0;\n};\n\nvar createMaterials = function (args, ctx, goo) {\n\tcreateMaterial(args, ctx, goo, \"bookMaterial\", \"simpleShader\", args.bookTexture);\n\t\n\tcreateMaterial(args, ctx, goo, \"wallMaterial\", \"wallShader\", args.wallTexture);\n\tcreateMaterial(args, ctx, goo, \"fakeWallMaterial\", \"fakeWallShader\", args.wallTexture);\n\t\n\tcreateMaterial(args, ctx, goo, \"floorMaterial\", \"wallShader\", args.floorTexture);\n\tcreateMaterial(args, ctx, goo, \"fakeFloorMaterial\", \"fakeWallShader\", args.floorTexture);\n\t\n\tctx.materials[\"bookMaterial\"].uniforms.lastPlayTime = -10;\n\tctx.materials[\"wallMaterial\"].uniforms.lastPlayTime = -10;\n\tctx.materials[\"floorMaterial\"].uniforms.lastPlayTime = -10;\n};\n\nvar setCustomMaterial = function (args, ctx, goo, name, entity) {\n\tvar material = ctx.materials[name];\n\t//material = new goo.Material(goo.ShaderLib.simple);\n\tif (!entity.meshRendererComponent) {\n\t\tentity.set(new goo.MeshRendererComponent(material));\n\t}\n\telse {\n\t\tentity.meshRendererComponent.materials[0] = material;\n\t}\n};\n\nvar updateMaterials = function (args, ctx, goo) {\n\t\n\tvar playerPos = ctx.activeCameraEntity.getTranslation();\n\tvar cameraPos = [playerPos.x, playerPos.y, playerPos.z];\n\t\n\tfor (var i in ctx.materials) {\n\t\tctx.materials[i].uniforms.cameraPosition = cameraPos;\n\t\tctx.materials[i].uniforms.on = ctx.worldData.eyesOpenFactor;\n\t}\n};\n\nvar playChord = function (args, ctx, goo, x) {\n\tvar i = (x % 7) + 1;\n\tif (ctx.worldData.sound[i].isPlaying()) return;\n\t\n\tctx.worldData.sound[i].play();\n\t\n\tif ((ctx.world.time - ctx.materials[\"bookMaterial\"].uniforms.lastPlayTime) > 0.7) {\n\t\tctx.materials[\"bookMaterial\"].uniforms.lastPlayTime = ctx.world.time;\n\t\tctx.materials[\"wallMaterial\"].uniforms.lastPlayTime = ctx.world.time;\n\t\tctx.materials[\"floorMaterial\"].uniforms.lastPlayTime = ctx.world.time;\n\t}\n};\n\n/**\n * Implement this method to do initializing.\n * Called when pressing play and when running exported projects.\n */\nvar setup = function(args, ctx, goo) {\n\tvar gooRunner = ctx.world.gooRunner;\n\t/*if (!gooRunner.stats) {\n\t\tif (!window.stats) {\n\t\t\twindow.stats = new goo.Stats();\n\t\t\twindow.stats.domElement.style.position = 'absolute';\n\t\t\twindow.stats.domElement.style.left = '10px';\n\t\t\twindow.stats.domElement.style.top = '10px';\n\t\t\tdocument.body.appendChild(window.stats.domElement);\n\t\t}\n\t\tgooRunner.stats = window.stats;\n\t}*/\n\t\n\t////\n\tctx.shaders = {};\n\tctx.materials = {};\n\tctx.otherBlockMap = {\n\t\t\"0-255-0\": \"start\",\n\t\t\"255-0-0\": \"guitar\",\n\t\t\"0-0-255\": \"finish\"\n\t}\n\t\n\tcreateShaders(args, ctx, goo);\n\tcreateMaterials(args, ctx, goo);\n\t\n\tctx.walls = [];\n\tctx.level = null;\n\tctx.levelArray = null;\n\tctx.worldData.levelLoaded = false;\n\t\n\tctx.worldData.getColor = function (a, x, y) {\n\t\tvar index = ((ctx.levelHeight - 1 - y)*ctx.levelWidth + (ctx.levelWidth - 1 - x))*4;\n\t\t\n\t\treturn new goo.Vector4([\n\t\t\ta[index + 0],\n\t\t\ta[index + 1],\n\t\t\ta[index + 2],\n\t\t\ta[index + 3]]);\n\t};\n\t\n\tctx.worldData.getBlock = function (a, x, y) {\n\t\tvar color = ctx.worldData.getColor(a, Math.floor(x), Math.floor(y));\n\t\t\n\t\tvar height = 1.0 - color.r/255;\n\t\tvar mean = color.r + color.g + color.b;\n\t\tmean /= 3;\n\t\treturn {\n\t\t\ttype: color.w === 0? \"empty\" : mean != color.r? \"other\" : color.r === 0? \"wall\" : \"floor\",\n\t\t\theight: color.r === 0? 0 : height*args.slope,\n\t\t\tcolor: color\n\t\t};\n\t};\n\t\n\tctx.worldData.getCollisionXY = function (x, y) {\n\t\tif (x < 0 || x >= ctx.levelWidth || y < 0 || y >= ctx.levelHeight) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar color = ctx.worldData.getColor(ctx.levelCollisionArray, Math.floor(x), Math.floor(y));\n\t\t/*var otherCollision = true;\n\t\tif (ctx.worldData.eyesOpenFactor > 0.1) {\n\t\t\tvar otherBlock = ctx.worldData.getBlock(ctx.levelOtherArray, x, y);\n\t\t\totherCollision = otherBlock.type != \"wall\";\n\t\t}*/\n\t\t\n\t\treturn color.a < 255; // && otherCollision\n\t};\n\tctx.worldData.getCollision = function (pos) {\n\t\treturn ctx.worldData.getCollisionXY(pos.x, pos.z);\n\t};\n\t\n\tctx.worldData.getHeightXY = function (x, y) {\n\t\treturn ctx.worldData.getBlock(ctx.levelBackgroundArray, x, y).height;\n\t}\n\tctx.worldData.getHeight = function (pos) {\n\t\treturn ctx.worldData.getHeightXY(pos.x, pos.z);\n\t};\n\t\n\t// Game related\n\tctx.eyesOpen = false;\n\tctx.worldData.eyesOpenFactor = 0.0;\n\tctx.worldData.canPlay = false;\n\t\n\tctx.keyDown = function (e) {\n\t\tswitch (e.keyCode) {\n\t\t\tcase 32: //SPACE\n\t\t\t\tif (!ctx.worldData.levelLoaded) break;\n\t\t\t\t\n\t\t\t\tctx.eyesOpen = !ctx.eyesOpen;\n\t\t\t\tif (ctx.eyesOpen) {\n\t\t\t\t\tctx.worldData.hideDialog();\n\t\t\t\t}\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (ctx.worldData.eyesOpenFactor < 0.1 && ctx.worldData.canPlay) {\n\t\t\t\t\tplayChord(args, ctx, goo, e.keyCode);\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t};\n\tdocument.addEventListener(\"keydown\", ctx.keyDown);\n\t\n\tctx.lastTime = ctx.world.time;\n\t\n\t// Level\n\t\n\tctx.level = 0;\n\tloadLevel(args, ctx, goo, \"level\" + (++ctx.level));\n};\n\nvar loadTextureAsArray = function (args, ctx, goo, texture) {\n\tvar canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\tvar width = canvas.width = texture.image.width;\n\tvar height = canvas.height = texture.image.height;\n\t\n    context.drawImage(texture.image, 0, 0);\n\n    var imageData = context.getImageData(0, 0, width, height);\n    var data = imageData.data;\n    \n    return data;\n\t/*var renderer = ctx.world.gooRunner.renderer;\n\tvar gl = renderer.context;\n\ttexture.glTexture = gl.createTexture();\n\trenderer.preloadTexture(gl, texture);\n\tvar textureArray;\n\t\n\tvar width = texture.image.width;\n\tvar height = texture.image.height;\n\t\n\tvar fb = gl.createFramebuffer();\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture.glTexture, 0);\n\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE) {\n\t\ttextureArray = new Uint8Array(width * height * 4);\n\t\tgl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, textureArray);\n\t}\n\t//gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\n\treturn textureArray;*/\n};\n\nvar loadLevel = function (args, ctx, goo, name) {\n\tconsole.log(\"Loading level \"+ctx.level+\"..\");\n\tctx.worldData.levelLoaded = false;\n\t\n\tvar levelBackground = ctx.levelBackground = args[name+\"background\"];\n\tif (!levelBackground) {\n\t\tfinish(args, ctx, goo, name);\n\t\treturn;\n\t}\n\tvar levelBackgroundArray = ctx.levelBackgroundArray = loadTextureAsArray(args, ctx, goo, levelBackground);\n\tvar levelCollision = ctx.levelCollision = args[name+\"collision\"];\n\tvar levelCollisionArray = ctx.levelCollisionArray = loadTextureAsArray(args, ctx, goo, levelCollision);\n\tvar levelOther = ctx.levelOther = args[name+\"other\"];\n\tvar levelOtherArray = ctx.levelOtherArray = loadTextureAsArray(args, ctx, goo, levelOther);\n\t\n\t\n\tvar width = ctx.levelWidth = levelBackground.image.width;\n\tvar height = ctx.levelHeight = levelBackground.image.height;\n\t\n\t// Instantiates blocks\n\tvar createWall = function (x, z, block, material) {\n\t\tvar e = ctx.world.createEntity(\"wall\", new goo.Box());\n\t\tctx.entity.transformComponent.attachChild(e.transformComponent);\n\t\tvar topE = null;\n\t\t\n\t\tvar y = 0;\n\t\t\n\t\tif (block.type == \"wall\") {\n\t\t\te.setScale([1 ,args.slope + args.height, 1]);\n\t\t\ty = (args.slope + args.height) / 2;\n\t\t}\n\t\telse if (block.type == \"floor\") {\n\t\t\ty = block.height - 0.5;\n\t\t\t\n\t\t\ttopE = ctx.world.createEntity(\"wall\", new goo.Box());\n\t\t\tctx.entity.transformComponent.attachChild(topE.transformComponent);\n\t\t}\n\t\t\n\t\te.set([x, y, z]);\n\t\tsetCustomMaterial(args, ctx, goo, material, e);\n\t\te.transformComponent.setUpdated();\n\t\te.addToWorld();\n\t\tctx.walls.push(e);\n\t\t\n\t\tif (topE) {\n\t\t\ttopE.set([x, y + args.height + 1, z]);\n\t\t\tsetCustomMaterial(args, ctx, goo, material, topE);\n\t\t\ttopE.transformComponent.setUpdated();\n\t\t\ttopE.addToWorld();\n\t\t\tctx.walls.push(topE);\n\t\t}\n\t};\n\t\n\t// Instantiate world\n\tvar index = 0;\n\tvar j = 0;\n\tvar block;\n\tvar blockOther;\n\tfor (var i = 0; i < width; ++i) {\n\t\tfor (var k = 0; k < height; ++k) {\n\t\t\tblock = ctx.worldData.getBlock(levelBackgroundArray, i, k);\n\t\t\tif (block.type != \"empty\") {\n\t\t\t\tcreateWall(i, k, block, block.type == \"wall\"? \"wallMaterial\": \"floorMaterial\");\n\t\t\t}\n\t\t\t\n\t\t\tblockOther = ctx.worldData.getBlock(levelOtherArray, i, k);\n\t\t\tif (blockOther.type != \"empty\") {\n\t\t\t\tif (blockOther.type == \"other\") { // Special\n\t\t\t\t\tvar key = ctx.otherBlockMap[\n\t\t\t\t\t\tblockOther.color.r+\"-\"+\n\t\t\t\t\t\tblockOther.color.g+\"-\"+\n\t\t\t\t\t\tblockOther.color.b\n\t\t\t\t\t];\n\t\t\t\t\t\n\t\t\t\t\tif (key == \"start\") {\n\t\t\t\t\t\tctx.worldData.startPoint = new goo.Vector3([i, 0, k]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (key == \"guitar\") {\n\t\t\t\t\t\tvar e = ctx.world.createEntity(\"book\", new goo.Box());\n\t\t\t\t\t\tctx.entity.transformComponent.attachChild(e.transformComponent);\n\t\t\t\t\t\te.setScale([0.7 , 2, 0.7]);\n\t\t\t\t\t\te.setRotation([0, Math.PI/2 + 0.05, -0.07]);\n\t\t\t\t\t\te.set([i, block.height - 1 + 0.07, k]);\n\t\t\t\t\t\tsetCustomMaterial(args, ctx, goo, \"bookMaterial\", e);\n\t\t\t\t\t\te.transformComponent.setUpdated();\n\t\t\t\t\t\te.addToWorld();\n\t\t\t\t\t\tctx.walls.push(e);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// To unlock play\n\t\t\t\t\t\tctx.playPos = new goo.Vector2([i + 0.5, k + 0.5]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (key == \"finish\") {\n\t\t\t\t\t\tctx.finishPos = new goo.Vector2([i + 0.5, k + 0.5]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcreateWall(i, k, blockOther, blockOther.type == \"wall\"? \"fakeWallMaterial\": \"fakeFloorMaterial\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tctx.worldData.levelLoaded = true;\n\tconsole.log(\"Level \"+ctx.level+\" loaded!\");\n};\n\nvar cleanLevel = function(args, ctx, goo) {\n\tif (ctx.walls) {\n\t\tfor (var i = 0; i < ctx.walls.length; ++i)\n\t\t\tctx.walls[i].removeFromWorld();\n\t\tctx.walls.length = 0;\n\t}\n};\n\n/**\n * Implement this method to do cleanup. Called on script stop and delete.\n */\nvar cleanup = function(args, ctx, goo) {\n\tcleanLevel(args, ctx, goo);\n\t\n\tdocument.removeEventListener(\"keydown\", ctx.keyDown);\n\t\n\t\n\tctx.shaders = null;\n\tctx.materials = null;\n};\n\n/**\n * This function will be called every frame.\n *\n * @param {object} args\n * Contains all the parameters defined in the 'parameters' variable below.\n * Its values are chosen in the scripts panel.\n *\n * @param {object} ctx\n * A contextual data object, unique for the script.\n * Properties on this object will be shared between the script's functions.\n * {\n *   entity: Entity,\n *   world: World,\n *   domElement: canvas,\n *   viewportWidth: number,\n *   viewportHeight: number,\n *   activeCameraEntity: Entity,\n *\n *   worldData: object,\n *              // Accessible to all scripts in the world.\n *\t\t\t\t// Example: ctx.worldData.helloString = 'hello';\n *\n *   entityData: object\n *               // Accessible to all scripts on this entity.\n * }\n *\n * @param {object} goo\n * Contains most useful engine classes like goo.Vector3, goo.Matrix3x3, etc.\n * See API documentation for more info on the classes.\n */\nvar update = function(args, ctx, goo) {\n\tvar deltaTime = ctx.world.time - ctx.lastTime;\n\tctx.lastTime = ctx.world.time;\n\t\n\tctx.worldData.eyesOpenFactor = goo.MathUtils.lerp(deltaTime*4.0, ctx.worldData.eyesOpenFactor, ctx.eyesOpen? 1.0 : 0.0);\n\tupdateMaterials(args, ctx, goo);\n\t\n\tif (!ctx.worldData.levelLoaded) return;\n\t\n\tvar playerPos = ctx.activeCameraEntity.getTranslation();\n\tvar d;\n\tif (!ctx.worldData.canPlay) {\n\t\td = goo.Vector2.sub(ctx.playPos, new goo.Vector2([playerPos.x, playerPos.z])).length();\n\t\t\n\t\tif (d <= 0.7) {\n\t\t\tctx.worldData.canPlay = true;\n\t\t\tctx.eyesOpen = false;\n\t\t\t\n\t\t\tctx.worldData.showDialog(\"Music.. Chords.. My guitar.. I can play\", \"(press any key to play when eyes shut)\");\n\t\t}\n\t}\n\t\n\tif (ctx.finishPos) {\n\t\td = goo.Vector2.sub(ctx.finishPos, new goo.Vector2([playerPos.x, playerPos.z])).length();\n\t\tif (d <= 1.5) {\n\t\t\tctx.worldData.levelLoaded = false;\n\t\t\tctx.eyesOpen = false;\n\t\t\tctx.worldData.showDialog(\"Loading..\");\n\t\t\t\n\t\t\tcleanLevel(args, ctx, goo);\n\t\t\tloadLevel(args, ctx, goo, \"level\" + (++ctx.level));\n\t\t\t\n\t\t\tif (ctx.worldData.levelLoaded) { // If we are not finished\n\t\t\t\tctx.worldData.resetPlayer();\n\t\t\t\tctx.worldData.eyesOpenFactor = 0.0;\n\t\t\t\tupdateMaterials(args, ctx, goo);\n\t\t\t\tctx.worldData.showDialog(\"Open your eyes\", \"(press SPACE..)\");\n\t\t\t\t\n\t\t\t\t//ctx.worldData.hideDialog();\n\t\t\t\t//ctx.eyesOpen = true;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar finish = function (args, ctx, goo) {\n\tctx.eyesOpen = false;\n\tctx.worldData.showDialog(\"Thanks for playing!\", \"@fonserbc\");\n\tctx.worldData.levelLoaded = false;\n};\n\n/**\n * Parameters defined here will be available on the 'args' object as 'args.key'\n * and customizable using the script panel. Parameters are defined like below.\n * 'key', 'type', and 'default' are required properties.\n * {\n *   key: string,\n *   name: string,\n *   type: enum ('int', 'float', 'string', 'boolean', 'vec3'),\n *   control: enum (\n *    'slider', // Slider with min and max values.\n *    'color',  // Color picker for RGB vec3.\n *    'select', // Used together with the 'options' property.\n *   ),\n *   description: string, // Short tooltip description of the parameter.\n *   options: *[], // Array of values of specified type.\n *   default: *, // Preselected value. One of the options if options are used.\n *   min: number, // Can be used when data type is float or int.\n *   max: number, // Can be used when data type is float or int.\n *   precision: number, // Number of significant digits for float values.\n *   scale: number, // How fast number values change when dragging slider.\n *   exponential: boolean // Can be used together with slider.\n * }\n */\nvar parameters = [\n{\n\tkey: \"height\",\n\tname: \"Height\",\n\ttype: \"float\",\n\tdefault: 2\n},\n{\n\tkey: \"floorTexture\",\n\tname: \"floorTexture\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"wallTexture\",\n\tname: \"wallTexture\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"bookTexture\",\n\tname: \"bookTexture\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"slope\",\n\tname: \"Slope\",\n\ttype: \"float\",\n\tdefault: 4\n},\n{\n\tkey: \"level1background\",\n\tname: \"Level 1 back\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level1collision\",\n\tname: \"Level 1 collision\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level1other\",\n\tname: \"Level 1 other\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level2background\",\n\tname: \"Level 2 back\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level2collision\",\n\tname: \"Level 2 collision\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level2other\",\n\tname: \"Level 2 other\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level3background\",\n\tname: \"Level 3 back\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level3collision\",\n\tname: \"Level 3 collision\",\n\ttype: \"texture\",\n\tdefault: null\n},\n{\n\tkey: \"level3other\",\n\tname: \"Level 3 other\",\n\ttype: \"texture\",\n\tdefault: null\n}\n];", "name": "Level", "license": "CC0", "created": "2014-08-23T14:52:25.436Z", "deleted": false, "_readOnly": false, "modified": "2014-09-16T23:50:38.218161+00:00", "dataModelVersion": 2, "dependencies": {"https://code.jquery.com/jquery-2.1.1.min.js": {"url": "https://code.jquery.com/jquery-2.1.1.min.js", "sortValue": 0}}, "id": "e0a0e11836cf4c1590813f323e95e64c.script"}, "70bb01da06f24f70b0e8fbf4694fd10b.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level3other.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T23:41:37+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T23:41:37+00:00", "repeat": [1, 1], "imageRef": "d4ef7736bd41c188def29ad2c4d509843f9f2beb.png", "offset": [0, 0], "id": "70bb01da06f24f70b0e8fbf4694fd10b.texture", "anisotropy": 1, "wrapT": "Repeat"}, "b2bc00150ba6428aa3f7d95295c9fa0f.entity": {"name": "Chord 7", "license": "CC0", "created": "2014-08-24T15:57:15.640Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T18:13:25+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"46df4326cad14c37b4cc9376d7c37da3.sound": {"soundRef": "46df4326cad14c37b4cc9376d7c37da3.sound", "sortValue": 0}}}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "b2bc00150ba6428aa3f7d95295c9fa0f.entity"}, "0a07453990c64ff593c9e0645a3db17c.script": {"body": "var readFile = function(ctx, name) {\n\tvar rs = ctx.world.by.name(name).first();\n\tvar html = rs.htmlComponent.domElement.innerHTML;\n\tvar div = $('<div/>');\n\tvar res = div.html(html).text();\n\tdiv.remove();\n\treturn res;\n};\n\n\n/**\n * Implement this method to do initializing.\n * Called when pressing play and when running exported projects.\n */\nvar setup = function(args, ctx, goo) {\n\t// We compile the shader\n\tctx.shader = {\n\t\tattributes: {\n\t\t\tvertexPosition: goo.MeshData.POSITION,\n\t\t\tvertexUV0: goo.MeshData.TEXCOORD0,\n\t\t\tvertexNormal: goo.MeshData.NORMAL,\n\t\t},\n\t\tuniforms: {\n\t\t\tviewProjectionMatrix: goo.Shader.VIEW_PROJECTION_MATRIX,\n\t\t\tworldMatrix: goo.Shader.WORLD_MATRIX,\n\t\t\tcameraPosition: goo.Shader.CAMERA,\n\t\t\tdiffuseMap: goo.Shader.DIFFUSE_MAP,\n\t\t\tnormalMap: goo.Shader.NORMAL_MAP,\n\t\t\ttime: function () {\n\t\t\t\treturn ctx.world.time;\n\t\t\t}\n\t\t},\n\t\tvshader: readFile(ctx, \"customShader.vert\"),\n\t\tfshader: readFile(ctx, \"customShader.frag\")\n\t};\n\t\n\tvar entity = ctx.entity;\n\t\n\t// If we have parent we want to change the shader of the parent\n\tif (ctx.entity.transformComponent.parent) {\n\t\tentity = ctx.entity.transformComponent.parent.entity;\n\t}\n\t\n\t// Create the material\n\tctx.material = new goo.Material(\"CustomMaterial\", ctx.shader);\n\t\n\tvar oldMaterial = null;\n\tif (!entity.meshRendererComponent) {\n\t\tentity.set(new goo.MeshRendererComponent(ctx.material));\n\t}\n\telse {\n\t\toldMaterial = entity.meshRendererComponent.materials[0];\n\t\tentity.meshRendererComponent.materials[0] = ctx.material;\n\t}\n\t\n\t//We set the textures of the material\n\tif (oldMaterial) {\n\t\t// We can reuse the textures from the old material if we want\n\t\t//\tctx.material.setTexture(Shader.DIFFUSE_MAP, oldMaterial.getTexture(Shader.DIFFUSE_MAP));\n\t}\n\t\n\t// We can use textures we set\n\tctx.material.setTexture(goo.Shader.DIFFUSE_MAP, args.diffuseMap);\n};\n\n/**\n * Implement this method to do cleanup. Called on script stop and delete.\n */\nvar cleanup = function(args, ctx, goo) {};\n\n/**\n * This function will be called every frame.\n *\n * @param {object} args\n * Contains all the parameters defined in the 'parameters' variable below.\n * Its values are chosen in the scripts panel.\n *\n * @param {object} ctx\n * A contextual data object, unique for the script.\n * Properties on this object will be shared between the script's functions.\n * {\n *   entity: Entity,\n *   world: World,\n *   domElement: canvas,\n *   viewportWidth: number,\n *   viewportHeight: number,\n *   activeCameraEntity: Entity,\n *\n *   worldData: object,\n *              // Accessible to all scripts in the world.\n *\t\t\t\t// Example: ctx.worldData.helloString = 'hello';\n *\n *   entityData: object\n *               // Accessible to all scripts on this entity.\n * }\n *\n * @param {object} goo\n * Contains most useful engine classes like goo.Vector3, goo.Matrix3x3, etc.\n * See API documentation for more info on the classes.\n */\nvar update = function(args, ctx, goo) {\n};\n\n/**\n * Parameters defined here will be available on the 'args' object as 'args.key'\n * and customizable using the script panel. Parameters are defined like below.\n * 'key', 'type', and 'default' are required properties.\n * {\n *   key: string,\n *   name: string,\n *   type: enum ('int', 'float', 'string', 'boolean', 'vec3'),\n *   control: enum (\n *    'slider', // Slider with min and max values.\n *    'color',  // Color picker for RGB vec3.\n *    'select', // Used together with the 'options' property.\n *   ),\n *   description: string, // Short tooltip description of the parameter.\n *   options: *[], // Array of values of specified type.\n *   default: *, // Preselected value. One of the options if options are used.\n *   min: number, // Can be used when data type is float or int.\n *   max: number, // Can be used when data type is float or int.\n *   precision: number, // Number of significant digits for float values.\n *   scale: number, // How fast number values change when dragging slider.\n *   exponential: boolean // Can be used together with slider.\n * }\n */\nvar parameters = [\n{\n\tkey: \"diffuseMap\",\n\tname: \"Diffuse map\",\n\ttype: \"texture\",\n\tdefault: null\n}\t\n];", "name": "CustomShader", "license": "CC0", "created": "2014-08-27T13:24:47.892Z", "deleted": false, "_readOnly": false, "modified": "2014-09-12T08:25:47+00:00", "dataModelVersion": 2, "dependencies": {"https://code.jquery.com/jquery-2.1.1.min.js": {"url": "https://code.jquery.com/jquery-2.1.1.min.js", "sortValue": 0}}, "id": "0a07453990c64ff593c9e0645a3db17c.script"}, "5b231d777cff4d53a076e1cd14863c25.entity": {"name": "test.frag", "license": "CC0", "created": "2014-08-24T10:44:44.867Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T11:51:31+00:00", "dataModelVersion": 2, "static": false, "components": {"html": {"imageRefs": {}, "useTransformComponent": true, "innerHtml": "uniform mat4 viewProjectionMatrix;\r\nuniform mat4 worldMatrix;\r\nuniform sampler2D diffuseMap;\r\nuniform sampler2D normalMap;\r\n\r\nuniform float on;\r\nuniform float time;\r\nuniform float lastPlayTime;\r\n\r\nvarying vec2 texCoord0;\r\nvarying vec3 vCameraRelPos;\r\nvarying vec3 vWorldPos;\r\nvarying vec3 normalPos;\r\n\r\nvoid main(void) {\r\n\tgl_FragColor = vector4(1.0, 0.0, 0.0, 1.0);\r\n}"}, "transform": {"translation": [0, 10000, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "5b231d777cff4d53a076e1cd14863c25.entity"}, "7c8cabc11a274179bcde2ae250b8bcee.texture": {"wrapS": "Repeat", "minFilter": "NearestNeighborNoMipMaps", "name": "book_2.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "NearestNeighbor", "created": "2014-08-24T21:11:24.780Z", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T21:17:15+00:00", "repeat": [1, 1], "imageRef": "e8f619b50c122ac48000f05c575b05f1bbd8dc78.png", "lodBias": 0, "anisotropy": 1, "offset": [0, 0], "id": "7c8cabc11a274179bcde2ae250b8bcee.texture", "wrapT": "Repeat"}, "462c20b9e50d4e26a80518ebd111dd97.texture": {"wrapS": "Repeat", "minFilter": "NearestNeighborNoMipMaps", "name": "floor_3.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "NearestNeighbor", "created": "2014-08-24T21:44:43.646Z", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T21:44:53+00:00", "repeat": [1, 1], "imageRef": "7870f8b5a8d1ed7d890c99cc695da14eed50475e.png", "lodBias": 0, "anisotropy": 1, "offset": [0, 0], "id": "462c20b9e50d4e26a80518ebd111dd97.texture", "wrapT": "Repeat"}, "1f327f2123c945a8863602c6edd0c10f.entity": {"name": "Text", "license": "CC0", "created": "2014-08-23T14:41:51.257Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T23:41:15+00:00", "dataModelVersion": 2, "static": false, "components": {"transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0], "children": {"318aa49460df4f859050d0f738b1e165.entity": {"entityRef": "318aa49460df4f859050d0f738b1e165.entity", "sortValue": 0}, "933542baf0264eb2ab2b7b77b0c46cf4.entity": {"entityRef": "933542baf0264eb2ab2b7b77b0c46cf4.entity", "sortValue": 1}, "5b231d777cff4d53a076e1cd14863c25.entity": {"entityRef": "5b231d777cff4d53a076e1cd14863c25.entity", "sortValue": 3}, "7d0be3c3512d44e08c588ef379278d8e.entity": {"entityRef": "7d0be3c3512d44e08c588ef379278d8e.entity", "sortValue": 4}, "3c5ccb5327a9469daa5be0976b966499.entity": {"entityRef": "3c5ccb5327a9469daa5be0976b966499.entity", "sortValue": 2}}}}, "hidden": true, "id": "1f327f2123c945a8863602c6edd0c10f.entity"}, "b94dce591f904248a1482088e1ac34e9.sound": {"name": "2", "license": "CC0", "created": "2014-08-24T18:12:47.277Z", "deleted": false, "audioRefs": {"mp3": "e9d4fb8785ecf5f329f773172adb409c5209d282.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T18:39:28+00:00", "volume": 1, "id": "b94dce591f904248a1482088e1ac34e9.sound", "loop": false}, "82bc8c4a9eb240c49b0e4c611579b95b.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "level3collision.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2014-08-24T23:41:33+00:00", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T23:41:33+00:00", "repeat": [1, 1], "imageRef": "c091114df40b81e9dc0a028d7bb527badacf5ec4.png", "offset": [0, 0], "id": "82bc8c4a9eb240c49b0e4c611579b95b.texture", "anisotropy": 1, "wrapT": "Repeat"}, "1a612285f0a94710a036ec67e5cc7d02.sound": {"name": "4", "license": "CC0", "created": "2014-08-24T18:13:01.014Z", "deleted": false, "audioRefs": {"mp3": "860ff46036443aff117c71ac5538ceeabfa2ec57.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T18:13:35+00:00", "volume": 1, "id": "1a612285f0a94710a036ec67e5cc7d02.sound", "loop": false}, "07af4201c8c442c7bb642f13d21ed6e3.sound": {"name": "3", "license": "CC0", "created": "2014-08-24T18:12:54.740Z", "deleted": false, "audioRefs": {"mp3": "322de849b34d975a1cf263b1c3f26ebdc0a5f415.mp3"}, "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T18:13:37+00:00", "volume": 1, "id": "07af4201c8c442c7bb642f13d21ed6e3.sound", "loop": false}, "4f70c1079e224f6fbf6742d80481abf6.texture": {"wrapS": "Repeat", "minFilter": "NearestNeighborNoMipMaps", "name": "wall_2.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "NearestNeighbor", "created": "2014-08-24T21:06:18.156Z", "_readOnly": false, "dataModelVersion": 2, "modified": "2014-08-24T21:06:42+00:00", "repeat": [1, 1], "imageRef": "b3bec723d00aa9dc82a72ce1f9a6d3eb80a7eef2.png", "lodBias": 0, "anisotropy": 1, "offset": [0, 0], "id": "4f70c1079e224f6fbf6742d80481abf6.texture", "wrapT": "Repeat"}, "4f7ef01554b64b288aff2d6faa4d9d11.entity": {"name": "Chord 5", "license": "CC0", "created": "2014-08-24T15:57:15.640Z", "deleted": false, "_readOnly": false, "modified": "2014-08-24T18:13:32+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"07fe929562414ff1876f834c45b798fc.sound": {"soundRef": "07fe929562414ff1876f834c45b798fc.sound", "sortValue": 0}}}, "transform": {"translation": [0, 0, 0], "scale": [1, 1, 1], "rotation": [0, 0, 0]}}, "hidden": false, "id": "4f7ef01554b64b288aff2d6faa4d9d11.entity"}, "d0554436425843e58a05af267c2a1802.entity": {"name": "Player", "license": "CC0", "created": "2014-08-23T07:28:21.818Z", "deleted": false, "_readOnly": false, "modified": "2014-09-16T23:50:38.326850+00:00", "dataModelVersion": 2, "static": false, "components": {"sound": {"volume": 1, "sounds": {"483d76b220e2440d8d9f081ec2f5d452.sound": {"soundRef": "483d76b220e2440d8d9f081ec2f5d452.sound", "sortValue": 0}}}, "camera": {"fov": 69, "lockedRatio": false, "far": 200, "projectionMode": "Perspective", "near": 0.1, "aspect": 1, "size": 20}, "transform": {"translation": [-15.488725662231445, 3.9804389476776123, -16.35538673400879], "scale": [1, 1, 1], "rotation": [-14.896900419438978, -139.80193319113243, 0], "children": {"72b1267cdfa7455bbba87c5276f9074a.entity": {"entityRef": "72b1267cdfa7455bbba87c5276f9074a.entity", "sortValue": 4}, "4f7ef01554b64b288aff2d6faa4d9d11.entity": {"entityRef": "4f7ef01554b64b288aff2d6faa4d9d11.entity", "sortValue": 5}, "a483d6bbee764961a420484333a22c7d.entity": {"entityRef": "a483d6bbee764961a420484333a22c7d.entity", "sortValue": 1}, "b9155764f35b43f68a18fdcad1b99e51.entity": {"entityRef": "b9155764f35b43f68a18fdcad1b99e51.entity", "sortValue": 3}, "b2bc00150ba6428aa3f7d95295c9fa0f.entity": {"entityRef": "b2bc00150ba6428aa3f7d95295c9fa0f.entity", "sortValue": 7}, "70faf6035eb04a0aabc3c9d19c491bd9.entity": {"entityRef": "70faf6035eb04a0aabc3c9d19c491bd9.entity", "sortValue": 0}, "5caaa3d89bbc4832a3c09447793f8608.entity": {"entityRef": "5caaa3d89bbc4832a3c09447793f8608.entity", "sortValue": 2}, "1c5e95626a6044e3aaa4403b0d038555.entity": {"entityRef": "1c5e95626a6044e3aaa4403b0d038555.entity", "sortValue": 6}}}, "script": {"scripts": {"8c07e905c32c45fc880569f72fc86fab.scriptInstance": {"scriptRef": "GOO_ENGINE_SCRIPTS/MouseLookScript", "name": "MouseLookScript", "sortValue": 2, "options": {"maxAscent": 89.95, "whenUsed": true, "maxAzimuth": 90, "button": "None", "clampAzimuth": false, "enabled": true, "minAzimuth": -90, "minAscent": -89.95, "speed": 0.5}}, "d2695947fd78400790ce2d62ac1a4a40.scriptInstance": {"scriptRef": "4e79fcd8cf084511833159e310add7cd.script", "name": "Custom script", "sortValue": 3, "options": {"acc": 20, "speed": 3, "drag": 13, "enabled": true}}}}}, "hidden": false, "id": "d0554436425843e58a05af267c2a1802.entity"}}